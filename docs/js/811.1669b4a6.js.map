{"version":3,"file":"js/811.1669b4a6.js","mappings":"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","sources":["webpack://graduate/./src/views/CesiumSymbolInstance.vue?67e1","webpack://graduate/./node_modules/@cesium/engine/Source/Core/getFilenameFromUri.js","webpack://graduate/./node_modules/@cesium/engine/Source/Core/PinBuilder.js","webpack://graduate/./node_modules/topojson-client/src/reverse.js","webpack://graduate/./node_modules/topojson-client/src/identity.js","webpack://graduate/./node_modules/topojson-client/src/transform.js","webpack://graduate/./node_modules/topojson-client/src/feature.js","webpack://graduate/./node_modules/@cesium/engine/Source/DataSources/GeoJsonDataSource.js","webpack://graduate/./src/utils/cesium-symbol.ts","webpack://graduate/./src/views/CesiumSymbolInstance.vue","webpack://graduate/./src/views/CesiumSymbolInstance.vue?dddb"],"sourcesContent":["import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6795865f\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"map\",\n  ref: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512);\n}","import Uri from \"urijs\";\nimport defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\n\n/**\n * Given a URI, returns the last segment of the URI, removing any path or query information.\n * @function getFilenameFromUri\n *\n * @param {string} uri The Uri.\n * @returns {string} The last segment of the Uri.\n *\n * @example\n * //fileName will be\"simple.czml\";\n * const fileName = Cesium.getFilenameFromUri('/Gallery/simple.czml?value=true&example=false');\n */\nfunction getFilenameFromUri(uri) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(uri)) {\n    throw new DeveloperError(\"uri is required.\");\n  }\n  //>>includeEnd('debug');\n\n  const uriObject = new Uri(uri);\n  uriObject.normalize();\n  let path = uriObject.path();\n  const index = path.lastIndexOf(\"/\");\n  if (index !== -1) {\n    path = path.substr(index + 1);\n  }\n  return path;\n}\nexport default getFilenameFromUri;\n","import buildModuleUrl from \"./buildModuleUrl.js\";\nimport Color from \"./Color.js\";\nimport defined from \"./defined.js\";\nimport DeveloperError from \"./DeveloperError.js\";\nimport Resource from \"./Resource.js\";\nimport writeTextToCanvas from \"./writeTextToCanvas.js\";\n\n/**\n * A utility class for generating custom map pins as canvas elements.\n * <br /><br />\n * <div align='center'>\n * <img src='Images/PinBuilder.png' width='500'/><br />\n * Example pins generated using both the maki icon set, which ships with Cesium, and single character text.\n * </div>\n *\n * @alias PinBuilder\n * @constructor\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Map%20Pins.html|Cesium Sandcastle PinBuilder Demo}\n */\nfunction PinBuilder() {\n  this._cache = {};\n}\n\n/**\n * Creates an empty pin of the specified color and size.\n *\n * @param {Color} color The color of the pin.\n * @param {number} size The size of the pin, in pixels.\n * @returns {HTMLCanvasElement} The canvas element that represents the generated pin.\n */\nPinBuilder.prototype.fromColor = function (color, size) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(color)) {\n    throw new DeveloperError(\"color is required\");\n  }\n  if (!defined(size)) {\n    throw new DeveloperError(\"size is required\");\n  }\n  //>>includeEnd('debug');\n  return createPin(undefined, undefined, color, size, this._cache);\n};\n\n/**\n * Creates a pin with the specified icon, color, and size.\n *\n * @param {Resource|string} url The url of the image to be stamped onto the pin.\n * @param {Color} color The color of the pin.\n * @param {number} size The size of the pin, in pixels.\n * @returns {HTMLCanvasElement|Promise<HTMLCanvasElement>} The canvas element or a Promise to the canvas element that represents the generated pin.\n */\nPinBuilder.prototype.fromUrl = function (url, color, size) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(url)) {\n    throw new DeveloperError(\"url is required\");\n  }\n  if (!defined(color)) {\n    throw new DeveloperError(\"color is required\");\n  }\n  if (!defined(size)) {\n    throw new DeveloperError(\"size is required\");\n  }\n  //>>includeEnd('debug');\n  return createPin(url, undefined, color, size, this._cache);\n};\n\n/**\n * Creates a pin with the specified {@link https://www.mapbox.com/maki/|maki} icon identifier, color, and size.\n *\n * @param {string} id The id of the maki icon to be stamped onto the pin.\n * @param {Color} color The color of the pin.\n * @param {number} size The size of the pin, in pixels.\n * @returns {HTMLCanvasElement|Promise<HTMLCanvasElement>} The canvas element or a Promise to the canvas element that represents the generated pin.\n */\nPinBuilder.prototype.fromMakiIconId = function (id, color, size) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(id)) {\n    throw new DeveloperError(\"id is required\");\n  }\n  if (!defined(color)) {\n    throw new DeveloperError(\"color is required\");\n  }\n  if (!defined(size)) {\n    throw new DeveloperError(\"size is required\");\n  }\n  //>>includeEnd('debug');\n  return createPin(\n    buildModuleUrl(`Assets/Textures/maki/${encodeURIComponent(id)}.png`),\n    undefined,\n    color,\n    size,\n    this._cache\n  );\n};\n\n/**\n * Creates a pin with the specified text, color, and size.  The text will be sized to be as large as possible\n * while still being contained completely within the pin.\n *\n * @param {string} text The text to be stamped onto the pin.\n * @param {Color} color The color of the pin.\n * @param {number} size The size of the pin, in pixels.\n * @returns {HTMLCanvasElement} The canvas element that represents the generated pin.\n */\nPinBuilder.prototype.fromText = function (text, color, size) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(text)) {\n    throw new DeveloperError(\"text is required\");\n  }\n  if (!defined(color)) {\n    throw new DeveloperError(\"color is required\");\n  }\n  if (!defined(size)) {\n    throw new DeveloperError(\"size is required\");\n  }\n  //>>includeEnd('debug');\n\n  return createPin(undefined, text, color, size, this._cache);\n};\n\nconst colorScratch = new Color();\n\n//This function (except for the 3 commented lines) was auto-generated from an online tool,\n//http://www.professorcloud.com/svg-to-canvas/, using Assets/Textures/pin.svg as input.\n//The reason we simply can't load and draw the SVG directly to the canvas is because\n//it taints the canvas in Internet Explorer (and possibly some other browsers); making\n//it impossible to create a WebGL texture from the result.\nfunction drawPin(context2D, color, size) {\n  context2D.save();\n  context2D.scale(size / 24, size / 24); //Added to auto-generated code to scale up to desired size.\n  context2D.fillStyle = color.toCssColorString(); //Modified from auto-generated code.\n  context2D.strokeStyle = color.brighten(0.6, colorScratch).toCssColorString(); //Modified from auto-generated code.\n  context2D.lineWidth = 0.846;\n  context2D.beginPath();\n  context2D.moveTo(6.72, 0.422);\n  context2D.lineTo(17.28, 0.422);\n  context2D.bezierCurveTo(18.553, 0.422, 19.577, 1.758, 19.577, 3.415);\n  context2D.lineTo(19.577, 10.973);\n  context2D.bezierCurveTo(19.577, 12.63, 18.553, 13.966, 17.282, 13.966);\n  context2D.lineTo(14.386, 14.008);\n  context2D.lineTo(11.826, 23.578);\n  context2D.lineTo(9.614, 14.008);\n  context2D.lineTo(6.719, 13.965);\n  context2D.bezierCurveTo(5.446, 13.983, 4.422, 12.629, 4.422, 10.972);\n  context2D.lineTo(4.422, 3.416);\n  context2D.bezierCurveTo(4.423, 1.76, 5.447, 0.423, 6.718, 0.423);\n  context2D.closePath();\n  context2D.fill();\n  context2D.stroke();\n  context2D.restore();\n}\n\n//This function takes an image or canvas and uses it as a template\n//to \"stamp\" the pin with a white image outlined in black.  The color\n//values of the input image are ignored completely and only the alpha\n//values are used.\nfunction drawIcon(context2D, image, size) {\n  //Size is the largest image that looks good inside of pin box.\n  const imageSize = size / 2.5;\n  let sizeX = imageSize;\n  let sizeY = imageSize;\n\n  if (image.width > image.height) {\n    sizeY = imageSize * (image.height / image.width);\n  } else if (image.width < image.height) {\n    sizeX = imageSize * (image.width / image.height);\n  }\n\n  //x and y are the center of the pin box\n  const x = Math.round((size - sizeX) / 2);\n  const y = Math.round((7 / 24) * size - sizeY / 2);\n\n  context2D.globalCompositeOperation = \"destination-out\";\n  context2D.drawImage(image, x - 1, y, sizeX, sizeY);\n  context2D.drawImage(image, x, y - 1, sizeX, sizeY);\n  context2D.drawImage(image, x + 1, y, sizeX, sizeY);\n  context2D.drawImage(image, x, y + 1, sizeX, sizeY);\n\n  context2D.globalCompositeOperation = \"destination-over\";\n  context2D.fillStyle = Color.BLACK.toCssColorString();\n  context2D.fillRect(x - 1, y - 1, sizeX + 2, sizeY + 2);\n\n  context2D.globalCompositeOperation = \"destination-out\";\n  context2D.drawImage(image, x, y, sizeX, sizeY);\n\n  context2D.globalCompositeOperation = \"destination-over\";\n  context2D.fillStyle = Color.WHITE.toCssColorString();\n  context2D.fillRect(x - 1, y - 2, sizeX + 2, sizeY + 2);\n}\n\nconst stringifyScratch = new Array(4);\nfunction createPin(url, label, color, size, cache) {\n  //Use the parameters as a unique ID for caching.\n  stringifyScratch[0] = url;\n  stringifyScratch[1] = label;\n  stringifyScratch[2] = color;\n  stringifyScratch[3] = size;\n  const id = JSON.stringify(stringifyScratch);\n\n  const item = cache[id];\n  if (defined(item)) {\n    return item;\n  }\n\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = size;\n  canvas.height = size;\n\n  const context2D = canvas.getContext(\"2d\");\n  drawPin(context2D, color, size);\n\n  if (defined(url)) {\n    const resource = Resource.createIfNeeded(url);\n\n    //If we have an image url, load it and then stamp the pin.\n    const promise = resource.fetchImage().then(function (image) {\n      drawIcon(context2D, image, size);\n      cache[id] = canvas;\n      return canvas;\n    });\n    cache[id] = promise;\n    return promise;\n  } else if (defined(label)) {\n    //If we have a label, write it to a canvas and then stamp the pin.\n    const image = writeTextToCanvas(label, {\n      font: `bold ${size}px sans-serif`,\n    });\n    drawIcon(context2D, image, size);\n  }\n\n  cache[id] = canvas;\n  return canvas;\n}\nexport default PinBuilder;\n","export default function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n","export default function(x) {\n  return x;\n}\n","import identity from \"./identity.js\";\n\nexport default function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}\n","import reverse from \"./reverse.js\";\nimport transform from \"./transform.js\";\n\nexport default function(topology, o) {\n  if (typeof o === \"string\") o = topology.objects[o];\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature(topology, o); })}\n      : feature(topology, o);\n}\n\nfunction feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nexport function object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n","import ArcType from \"../Core/ArcType.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Color from \"../Core/Color.js\";\nimport createGuid from \"../Core/createGuid.js\";\nimport Credit from \"../Core/Credit.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport getFilenameFromUri from \"../Core/getFilenameFromUri.js\";\nimport PinBuilder from \"../Core/PinBuilder.js\";\nimport PolygonHierarchy from \"../Core/PolygonHierarchy.js\";\nimport Resource from \"../Core/Resource.js\";\nimport RuntimeError from \"../Core/RuntimeError.js\";\nimport HeightReference from \"../Scene/HeightReference.js\";\nimport VerticalOrigin from \"../Scene/VerticalOrigin.js\";\nimport * as topojson from \"topojson-client\";\nimport BillboardGraphics from \"./BillboardGraphics.js\";\nimport CallbackProperty from \"./CallbackProperty.js\";\nimport ColorMaterialProperty from \"./ColorMaterialProperty.js\";\nimport ConstantPositionProperty from \"./ConstantPositionProperty.js\";\nimport ConstantProperty from \"./ConstantProperty.js\";\nimport DataSource from \"./DataSource.js\";\nimport EntityCluster from \"./EntityCluster.js\";\nimport EntityCollection from \"./EntityCollection.js\";\nimport PolygonGraphics from \"./PolygonGraphics.js\";\nimport PolylineGraphics from \"./PolylineGraphics.js\";\n\nfunction defaultCrsFunction(coordinates) {\n  return Cartesian3.fromDegrees(coordinates[0], coordinates[1], coordinates[2]);\n}\n\nconst crsNames = {\n  \"urn:ogc:def:crs:OGC:1.3:CRS84\": defaultCrsFunction,\n  \"EPSG:4326\": defaultCrsFunction,\n  \"urn:ogc:def:crs:EPSG::4326\": defaultCrsFunction,\n};\n\nconst crsLinkHrefs = {};\nconst crsLinkTypes = {};\nlet defaultMarkerSize = 48;\nlet defaultMarkerSymbol;\nlet defaultMarkerColor = Color.ROYALBLUE;\nlet defaultStroke = Color.YELLOW;\nlet defaultStrokeWidth = 2;\nlet defaultFill = Color.fromBytes(255, 255, 0, 100);\nlet defaultClampToGround = false;\n\nconst sizes = {\n  small: 24,\n  medium: 48,\n  large: 64,\n};\n\nconst simpleStyleIdentifiers = [\n  \"title\",\n  \"description\", //\n  \"marker-size\",\n  \"marker-symbol\",\n  \"marker-color\",\n  \"stroke\", //\n  \"stroke-opacity\",\n  \"stroke-width\",\n  \"fill\",\n  \"fill-opacity\",\n];\n\nfunction defaultDescribe(properties, nameProperty) {\n  let html = \"\";\n  for (const key in properties) {\n    if (properties.hasOwnProperty(key)) {\n      if (key === nameProperty || simpleStyleIdentifiers.indexOf(key) !== -1) {\n        continue;\n      }\n      const value = properties[key];\n      if (defined(value)) {\n        if (typeof value === \"object\") {\n          html += `<tr><th>${key}</th><td>${defaultDescribe(value)}</td></tr>`;\n        } else {\n          html += `<tr><th>${key}</th><td>${value}</td></tr>`;\n        }\n      }\n    }\n  }\n\n  if (html.length > 0) {\n    html = `<table class=\"cesium-infoBox-defaultTable\"><tbody>${html}</tbody></table>`;\n  }\n\n  return html;\n}\n\nfunction createDescriptionCallback(describe, properties, nameProperty) {\n  let description;\n  return function (time, result) {\n    if (!defined(description)) {\n      description = describe(properties, nameProperty);\n    }\n    return description;\n  };\n}\n\nfunction defaultDescribeProperty(properties, nameProperty) {\n  return new CallbackProperty(\n    createDescriptionCallback(defaultDescribe, properties, nameProperty),\n    true\n  );\n}\n\n//GeoJSON specifies only the Feature object has a usable id property\n//But since \"multi\" geometries create multiple entity,\n//we can't use it for them either.\nfunction createObject(geoJson, entityCollection, describe) {\n  let id = geoJson.id;\n  if (!defined(id) || geoJson.type !== \"Feature\") {\n    id = createGuid();\n  } else {\n    let i = 2;\n    let finalId = id;\n    while (defined(entityCollection.getById(finalId))) {\n      finalId = `${id}_${i}`;\n      i++;\n    }\n    id = finalId;\n  }\n\n  const entity = entityCollection.getOrCreateEntity(id);\n  const properties = geoJson.properties;\n  if (defined(properties)) {\n    entity.properties = properties;\n\n    let nameProperty;\n\n    //Check for the simplestyle specified name first.\n    const name = properties.title;\n    if (defined(name)) {\n      entity.name = name;\n      nameProperty = \"title\";\n    } else {\n      //Else, find the name by selecting an appropriate property.\n      //The name will be obtained based on this order:\n      //1) The first case-insensitive property with the name 'title',\n      //2) The first case-insensitive property with the name 'name',\n      //3) The first property containing the word 'title'.\n      //4) The first property containing the word 'name',\n      let namePropertyPrecedence = Number.MAX_VALUE;\n      for (const key in properties) {\n        if (properties.hasOwnProperty(key) && properties[key]) {\n          const lowerKey = key.toLowerCase();\n\n          if (namePropertyPrecedence > 1 && lowerKey === \"title\") {\n            namePropertyPrecedence = 1;\n            nameProperty = key;\n            break;\n          } else if (namePropertyPrecedence > 2 && lowerKey === \"name\") {\n            namePropertyPrecedence = 2;\n            nameProperty = key;\n          } else if (namePropertyPrecedence > 3 && /title/i.test(key)) {\n            namePropertyPrecedence = 3;\n            nameProperty = key;\n          } else if (namePropertyPrecedence > 4 && /name/i.test(key)) {\n            namePropertyPrecedence = 4;\n            nameProperty = key;\n          }\n        }\n      }\n      if (defined(nameProperty)) {\n        entity.name = properties[nameProperty];\n      }\n    }\n\n    const description = properties.description;\n    if (description !== null) {\n      entity.description = !defined(description)\n        ? describe(properties, nameProperty)\n        : new ConstantProperty(description);\n    }\n  }\n  return entity;\n}\n\nfunction coordinatesArrayToCartesianArray(coordinates, crsFunction) {\n  const positions = new Array(coordinates.length);\n  for (let i = 0; i < coordinates.length; i++) {\n    positions[i] = crsFunction(coordinates[i]);\n  }\n  return positions;\n}\n\nconst geoJsonObjectTypes = {\n  Feature: processFeature,\n  FeatureCollection: processFeatureCollection,\n  GeometryCollection: processGeometryCollection,\n  LineString: processLineString,\n  MultiLineString: processMultiLineString,\n  MultiPoint: processMultiPoint,\n  MultiPolygon: processMultiPolygon,\n  Point: processPoint,\n  Polygon: processPolygon,\n  Topology: processTopology,\n};\n\nconst geometryTypes = {\n  GeometryCollection: processGeometryCollection,\n  LineString: processLineString,\n  MultiLineString: processMultiLineString,\n  MultiPoint: processMultiPoint,\n  MultiPolygon: processMultiPolygon,\n  Point: processPoint,\n  Polygon: processPolygon,\n  Topology: processTopology,\n};\n\n// GeoJSON processing functions\nfunction processFeature(dataSource, feature, notUsed, crsFunction, options) {\n  if (feature.geometry === null) {\n    //Null geometry is allowed, so just create an empty entity instance for it.\n    createObject(feature, dataSource._entityCollection, options.describe);\n    return;\n  }\n\n  if (!defined(feature.geometry)) {\n    throw new RuntimeError(\"feature.geometry is required.\");\n  }\n\n  const geometryType = feature.geometry.type;\n  const geometryHandler = geometryTypes[geometryType];\n  if (!defined(geometryHandler)) {\n    throw new RuntimeError(`Unknown geometry type: ${geometryType}`);\n  }\n  geometryHandler(dataSource, feature, feature.geometry, crsFunction, options);\n}\n\nfunction processFeatureCollection(\n  dataSource,\n  featureCollection,\n  notUsed,\n  crsFunction,\n  options\n) {\n  const features = featureCollection.features;\n  for (let i = 0, len = features.length; i < len; i++) {\n    processFeature(dataSource, features[i], undefined, crsFunction, options);\n  }\n}\n\nfunction processGeometryCollection(\n  dataSource,\n  geoJson,\n  geometryCollection,\n  crsFunction,\n  options\n) {\n  const geometries = geometryCollection.geometries;\n  for (let i = 0, len = geometries.length; i < len; i++) {\n    const geometry = geometries[i];\n    const geometryType = geometry.type;\n    const geometryHandler = geometryTypes[geometryType];\n    if (!defined(geometryHandler)) {\n      throw new RuntimeError(`Unknown geometry type: ${geometryType}`);\n    }\n    geometryHandler(dataSource, geoJson, geometry, crsFunction, options);\n  }\n}\n\nfunction createPoint(dataSource, geoJson, crsFunction, coordinates, options) {\n  let symbol = options.markerSymbol;\n  let color = options.markerColor;\n  let size = options.markerSize;\n\n  const properties = geoJson.properties;\n  if (defined(properties)) {\n    const cssColor = properties[\"marker-color\"];\n    if (defined(cssColor)) {\n      color = Color.fromCssColorString(cssColor);\n    }\n\n    size = defaultValue(sizes[properties[\"marker-size\"]], size);\n    const markerSymbol = properties[\"marker-symbol\"];\n    if (defined(markerSymbol)) {\n      symbol = markerSymbol;\n    }\n  }\n\n  let canvasOrPromise;\n  if (defined(symbol)) {\n    if (symbol.length === 1) {\n      canvasOrPromise = dataSource._pinBuilder.fromText(\n        symbol.toUpperCase(),\n        color,\n        size\n      );\n    } else {\n      canvasOrPromise = dataSource._pinBuilder.fromMakiIconId(\n        symbol,\n        color,\n        size\n      );\n    }\n  } else {\n    canvasOrPromise = dataSource._pinBuilder.fromColor(color, size);\n  }\n\n  const billboard = new BillboardGraphics();\n  billboard.verticalOrigin = new ConstantProperty(VerticalOrigin.BOTTOM);\n\n  // Clamp to ground if there isn't a height specified\n  if (coordinates.length === 2 && options.clampToGround) {\n    billboard.heightReference = HeightReference.CLAMP_TO_GROUND;\n  }\n\n  const entity = createObject(\n    geoJson,\n    dataSource._entityCollection,\n    options.describe\n  );\n  entity.billboard = billboard;\n  entity.position = new ConstantPositionProperty(crsFunction(coordinates));\n\n  const promise = Promise.resolve(canvasOrPromise)\n    .then(function (image) {\n      billboard.image = new ConstantProperty(image);\n    })\n    .catch(function () {\n      billboard.image = new ConstantProperty(\n        dataSource._pinBuilder.fromColor(color, size)\n      );\n    });\n\n  dataSource._promises.push(promise);\n}\n\nfunction processPoint(dataSource, geoJson, geometry, crsFunction, options) {\n  createPoint(dataSource, geoJson, crsFunction, geometry.coordinates, options);\n}\n\nfunction processMultiPoint(\n  dataSource,\n  geoJson,\n  geometry,\n  crsFunction,\n  options\n) {\n  const coordinates = geometry.coordinates;\n  for (let i = 0; i < coordinates.length; i++) {\n    createPoint(dataSource, geoJson, crsFunction, coordinates[i], options);\n  }\n}\n\nfunction createLineString(\n  dataSource,\n  geoJson,\n  crsFunction,\n  coordinates,\n  options\n) {\n  let material = options.strokeMaterialProperty;\n  let widthProperty = options.strokeWidthProperty;\n\n  const properties = geoJson.properties;\n  if (defined(properties)) {\n    const width = properties[\"stroke-width\"];\n    if (defined(width)) {\n      widthProperty = new ConstantProperty(width);\n    }\n\n    let color;\n    const stroke = properties.stroke;\n    if (defined(stroke)) {\n      color = Color.fromCssColorString(stroke);\n    }\n    const opacity = properties[\"stroke-opacity\"];\n    if (defined(opacity) && opacity !== 1.0) {\n      if (!defined(color)) {\n        color = material.color.getValue().clone();\n      }\n      color.alpha = opacity;\n    }\n    if (defined(color)) {\n      material = new ColorMaterialProperty(color);\n    }\n  }\n\n  const entity = createObject(\n    geoJson,\n    dataSource._entityCollection,\n    options.describe\n  );\n  const polylineGraphics = new PolylineGraphics();\n  entity.polyline = polylineGraphics;\n\n  polylineGraphics.clampToGround = options.clampToGround;\n  polylineGraphics.material = material;\n  polylineGraphics.width = widthProperty;\n  polylineGraphics.positions = new ConstantProperty(\n    coordinatesArrayToCartesianArray(coordinates, crsFunction)\n  );\n  polylineGraphics.arcType = ArcType.RHUMB;\n}\n\nfunction processLineString(\n  dataSource,\n  geoJson,\n  geometry,\n  crsFunction,\n  options\n) {\n  createLineString(\n    dataSource,\n    geoJson,\n    crsFunction,\n    geometry.coordinates,\n    options\n  );\n}\n\nfunction processMultiLineString(\n  dataSource,\n  geoJson,\n  geometry,\n  crsFunction,\n  options\n) {\n  const lineStrings = geometry.coordinates;\n  for (let i = 0; i < lineStrings.length; i++) {\n    createLineString(dataSource, geoJson, crsFunction, lineStrings[i], options);\n  }\n}\n\nfunction createPolygon(dataSource, geoJson, crsFunction, coordinates, options) {\n  if (coordinates.length === 0 || coordinates[0].length === 0) {\n    return;\n  }\n\n  let outlineColorProperty = options.strokeMaterialProperty.color;\n  let material = options.fillMaterialProperty;\n  let widthProperty = options.strokeWidthProperty;\n\n  const properties = geoJson.properties;\n  if (defined(properties)) {\n    const width = properties[\"stroke-width\"];\n    if (defined(width)) {\n      widthProperty = new ConstantProperty(width);\n    }\n\n    let color;\n    const stroke = properties.stroke;\n    if (defined(stroke)) {\n      color = Color.fromCssColorString(stroke);\n    }\n    let opacity = properties[\"stroke-opacity\"];\n    if (defined(opacity) && opacity !== 1.0) {\n      if (!defined(color)) {\n        color = outlineColorProperty.getValue().clone();\n      }\n      color.alpha = opacity;\n    }\n\n    if (defined(color)) {\n      outlineColorProperty = new ConstantProperty(color);\n    }\n\n    let fillColor;\n    const fill = properties.fill;\n    const materialColor = material.color.getValue();\n    if (defined(fill)) {\n      fillColor = Color.fromCssColorString(fill);\n      fillColor.alpha = materialColor.alpha;\n    }\n    opacity = properties[\"fill-opacity\"];\n    if (defined(opacity) && opacity !== materialColor.alpha) {\n      if (!defined(fillColor)) {\n        fillColor = materialColor.clone();\n      }\n      fillColor.alpha = opacity;\n    }\n    if (defined(fillColor)) {\n      material = new ColorMaterialProperty(fillColor);\n    }\n  }\n\n  const polygon = new PolygonGraphics();\n  polygon.outline = new ConstantProperty(true);\n  polygon.outlineColor = outlineColorProperty;\n  polygon.outlineWidth = widthProperty;\n  polygon.material = material;\n  polygon.arcType = ArcType.RHUMB;\n\n  const holes = [];\n  for (let i = 1, len = coordinates.length; i < len; i++) {\n    holes.push(\n      new PolygonHierarchy(\n        coordinatesArrayToCartesianArray(coordinates[i], crsFunction)\n      )\n    );\n  }\n\n  const positions = coordinates[0];\n  polygon.hierarchy = new ConstantProperty(\n    new PolygonHierarchy(\n      coordinatesArrayToCartesianArray(positions, crsFunction),\n      holes\n    )\n  );\n  if (positions[0].length > 2) {\n    polygon.perPositionHeight = new ConstantProperty(true);\n  } else if (!options.clampToGround) {\n    polygon.height = 0;\n  }\n\n  const entity = createObject(\n    geoJson,\n    dataSource._entityCollection,\n    options.describe\n  );\n  entity.polygon = polygon;\n}\n\nfunction processPolygon(dataSource, geoJson, geometry, crsFunction, options) {\n  createPolygon(\n    dataSource,\n    geoJson,\n    crsFunction,\n    geometry.coordinates,\n    options\n  );\n}\n\nfunction processMultiPolygon(\n  dataSource,\n  geoJson,\n  geometry,\n  crsFunction,\n  options\n) {\n  const polygons = geometry.coordinates;\n  for (let i = 0; i < polygons.length; i++) {\n    createPolygon(dataSource, geoJson, crsFunction, polygons[i], options);\n  }\n}\n\nfunction processTopology(dataSource, geoJson, geometry, crsFunction, options) {\n  for (const property in geometry.objects) {\n    if (geometry.objects.hasOwnProperty(property)) {\n      const feature = topojson.feature(geometry, geometry.objects[property]);\n      const typeHandler = geoJsonObjectTypes[feature.type];\n      typeHandler(dataSource, feature, feature, crsFunction, options);\n    }\n  }\n}\n\n/**\n * @typedef {object} GeoJsonDataSource.LoadOptions\n *\n * Initialization options for the <code>load</code> method.\n *\n * @property {string} [sourceUri] Overrides the url to use for resolving relative links.\n * @property {GeoJsonDataSource.describe} [describe=GeoJsonDataSource.defaultDescribeProperty] A function which returns a Property object (or just a string).\n * @property {number} [markerSize=GeoJsonDataSource.markerSize] The default size of the map pin created for each point, in pixels.\n * @property {string} [markerSymbol=GeoJsonDataSource.markerSymbol] The default symbol of the map pin created for each point.\n * @property {Color} [markerColor=GeoJsonDataSource.markerColor] The default color of the map pin created for each point.\n * @property {Color} [stroke=GeoJsonDataSource.stroke] The default color of polylines and polygon outlines.\n * @property {number} [strokeWidth=GeoJsonDataSource.strokeWidth] The default width of polylines and polygon outlines.\n * @property {Color} [fill=GeoJsonDataSource.fill] The default color for polygon interiors.\n * @property {boolean} [clampToGround=GeoJsonDataSource.clampToGround] true if we want the geometry features (polygons or linestrings) clamped to the ground.\n * @property {Credit|string} [credit] A credit for the data source, which is displayed on the canvas.\n */\n\n/**\n * A {@link DataSource} which processes both\n * {@link http://www.geojson.org/|GeoJSON} and {@link https://github.com/mbostock/topojson|TopoJSON} data.\n * {@link https://github.com/mapbox/simplestyle-spec|simplestyle-spec} properties will also be used if they\n * are present.\n *\n * @alias GeoJsonDataSource\n * @constructor\n *\n * @param {string} [name] The name of this data source.  If undefined, a name will be taken from\n *                        the name of the GeoJSON file.\n *\n * @demo {@link https://sandcastle.cesium.com/index.html?src=GeoJSON%20and%20TopoJSON.html|Cesium Sandcastle GeoJSON and TopoJSON Demo}\n * @demo {@link https://sandcastle.cesium.com/index.html?src=GeoJSON%20simplestyle.html|Cesium Sandcastle GeoJSON simplestyle Demo}\n *\n * @example\n * const viewer = new Cesium.Viewer('cesiumContainer');\n * viewer.dataSources.add(Cesium.GeoJsonDataSource.load('../../SampleData/ne_10m_us_states.topojson', {\n *   stroke: Cesium.Color.HOTPINK,\n *   fill: Cesium.Color.PINK,\n *   strokeWidth: 3,\n *   markerSymbol: '?'\n * }));\n */\nfunction GeoJsonDataSource(name) {\n  this._name = name;\n  this._changed = new Event();\n  this._error = new Event();\n  this._isLoading = false;\n  this._loading = new Event();\n  this._entityCollection = new EntityCollection(this);\n  this._promises = [];\n  this._pinBuilder = new PinBuilder();\n  this._entityCluster = new EntityCluster();\n  this._credit = undefined;\n  this._resourceCredits = [];\n}\n\n/**\n * Creates a Promise to a new instance loaded with the provided GeoJSON or TopoJSON data.\n *\n * @param {Resource|string|object} data A url, GeoJSON object, or TopoJSON object to be loaded.\n * @param {GeoJsonDataSource.LoadOptions} [options] An object specifying configuration options\n *\n * @returns {Promise<GeoJsonDataSource>} A promise that will resolve when the data is loaded.\n */\nGeoJsonDataSource.load = function (data, options) {\n  return new GeoJsonDataSource().load(data, options);\n};\n\nObject.defineProperties(GeoJsonDataSource, {\n  /**\n   * Gets or sets the default size of the map pin created for each point, in pixels.\n   * @memberof GeoJsonDataSource\n   * @type {number}\n   * @default 48\n   */\n  markerSize: {\n    get: function () {\n      return defaultMarkerSize;\n    },\n    set: function (value) {\n      defaultMarkerSize = value;\n    },\n  },\n  /**\n   * Gets or sets the default symbol of the map pin created for each point.\n   * This can be any valid {@link http://mapbox.com/maki/|Maki} identifier, any single character,\n   * or blank if no symbol is to be used.\n   * @memberof GeoJsonDataSource\n   * @type {string}\n   */\n  markerSymbol: {\n    get: function () {\n      return defaultMarkerSymbol;\n    },\n    set: function (value) {\n      defaultMarkerSymbol = value;\n    },\n  },\n  /**\n   * Gets or sets the default color of the map pin created for each point.\n   * @memberof GeoJsonDataSource\n   * @type {Color}\n   * @default Color.ROYALBLUE\n   */\n  markerColor: {\n    get: function () {\n      return defaultMarkerColor;\n    },\n    set: function (value) {\n      defaultMarkerColor = value;\n    },\n  },\n  /**\n   * Gets or sets the default color of polylines and polygon outlines.\n   * @memberof GeoJsonDataSource\n   * @type {Color}\n   * @default Color.BLACK\n   */\n  stroke: {\n    get: function () {\n      return defaultStroke;\n    },\n    set: function (value) {\n      defaultStroke = value;\n    },\n  },\n  /**\n   * Gets or sets the default width of polylines and polygon outlines.\n   * @memberof GeoJsonDataSource\n   * @type {number}\n   * @default 2.0\n   */\n  strokeWidth: {\n    get: function () {\n      return defaultStrokeWidth;\n    },\n    set: function (value) {\n      defaultStrokeWidth = value;\n    },\n  },\n  /**\n   * Gets or sets default color for polygon interiors.\n   * @memberof GeoJsonDataSource\n   * @type {Color}\n   * @default Color.YELLOW\n   */\n  fill: {\n    get: function () {\n      return defaultFill;\n    },\n    set: function (value) {\n      defaultFill = value;\n    },\n  },\n  /**\n   * Gets or sets default of whether to clamp to the ground.\n   * @memberof GeoJsonDataSource\n   * @type {boolean}\n   * @default false\n   */\n  clampToGround: {\n    get: function () {\n      return defaultClampToGround;\n    },\n    set: function (value) {\n      defaultClampToGround = value;\n    },\n  },\n\n  /**\n   * Gets an object that maps the name of a crs to a callback function which takes a GeoJSON coordinate\n   * and transforms it into a WGS84 Earth-fixed Cartesian.  Older versions of GeoJSON which\n   * supported the EPSG type can be added to this list as well, by specifying the complete EPSG name,\n   * for example 'EPSG:4326'.\n   * @memberof GeoJsonDataSource\n   * @type {object}\n   */\n  crsNames: {\n    get: function () {\n      return crsNames;\n    },\n  },\n\n  /**\n   * Gets an object that maps the href property of a crs link to a callback function\n   * which takes the crs properties object and returns a Promise that resolves\n   * to a function that takes a GeoJSON coordinate and transforms it into a WGS84 Earth-fixed Cartesian.\n   * Items in this object take precedence over those defined in <code>crsLinkHrefs</code>, assuming\n   * the link has a type specified.\n   * @memberof GeoJsonDataSource\n   * @type {object}\n   */\n  crsLinkHrefs: {\n    get: function () {\n      return crsLinkHrefs;\n    },\n  },\n\n  /**\n   * Gets an object that maps the type property of a crs link to a callback function\n   * which takes the crs properties object and returns a Promise that resolves\n   * to a function that takes a GeoJSON coordinate and transforms it into a WGS84 Earth-fixed Cartesian.\n   * Items in <code>crsLinkHrefs</code> take precedence over this object.\n   * @memberof GeoJsonDataSource\n   * @type {object}\n   */\n  crsLinkTypes: {\n    get: function () {\n      return crsLinkTypes;\n    },\n  },\n});\n\nObject.defineProperties(GeoJsonDataSource.prototype, {\n  /**\n   * Gets or sets a human-readable name for this instance.\n   * @memberof GeoJsonDataSource.prototype\n   * @type {string}\n   */\n  name: {\n    get: function () {\n      return this._name;\n    },\n    set: function (value) {\n      if (this._name !== value) {\n        this._name = value;\n        this._changed.raiseEvent(this);\n      }\n    },\n  },\n  /**\n   * This DataSource only defines static data, therefore this property is always undefined.\n   * @memberof GeoJsonDataSource.prototype\n   * @type {DataSourceClock}\n   */\n  clock: {\n    value: undefined,\n    writable: false,\n  },\n  /**\n   * Gets the collection of {@link Entity} instances.\n   * @memberof GeoJsonDataSource.prototype\n   * @type {EntityCollection}\n   */\n  entities: {\n    get: function () {\n      return this._entityCollection;\n    },\n  },\n  /**\n   * Gets a value indicating if the data source is currently loading data.\n   * @memberof GeoJsonDataSource.prototype\n   * @type {boolean}\n   */\n  isLoading: {\n    get: function () {\n      return this._isLoading;\n    },\n  },\n  /**\n   * Gets an event that will be raised when the underlying data changes.\n   * @memberof GeoJsonDataSource.prototype\n   * @type {Event}\n   */\n  changedEvent: {\n    get: function () {\n      return this._changed;\n    },\n  },\n  /**\n   * Gets an event that will be raised if an error is encountered during processing.\n   * @memberof GeoJsonDataSource.prototype\n   * @type {Event}\n   */\n  errorEvent: {\n    get: function () {\n      return this._error;\n    },\n  },\n  /**\n   * Gets an event that will be raised when the data source either starts or stops loading.\n   * @memberof GeoJsonDataSource.prototype\n   * @type {Event}\n   */\n  loadingEvent: {\n    get: function () {\n      return this._loading;\n    },\n  },\n  /**\n   * Gets whether or not this data source should be displayed.\n   * @memberof GeoJsonDataSource.prototype\n   * @type {boolean}\n   */\n  show: {\n    get: function () {\n      return this._entityCollection.show;\n    },\n    set: function (value) {\n      this._entityCollection.show = value;\n    },\n  },\n\n  /**\n   * Gets or sets the clustering options for this data source. This object can be shared between multiple data sources.\n   *\n   * @memberof GeoJsonDataSource.prototype\n   * @type {EntityCluster}\n   */\n  clustering: {\n    get: function () {\n      return this._entityCluster;\n    },\n    set: function (value) {\n      //>>includeStart('debug', pragmas.debug);\n      if (!defined(value)) {\n        throw new DeveloperError(\"value must be defined.\");\n      }\n      //>>includeEnd('debug');\n      this._entityCluster = value;\n    },\n  },\n  /**\n   * Gets the credit that will be displayed for the data source\n   * @memberof GeoJsonDataSource.prototype\n   * @type {Credit}\n   */\n  credit: {\n    get: function () {\n      return this._credit;\n    },\n  },\n});\n\n/**\n * Asynchronously loads the provided GeoJSON or TopoJSON data, replacing any existing data.\n *\n * @param {Resource|string|object} data A url, GeoJSON object, or TopoJSON object to be loaded.\n * @param {GeoJsonDataSource.LoadOptions} [options] An object specifying configuration options\n *\n * @returns {Promise<GeoJsonDataSource>} a promise that will resolve when the GeoJSON is loaded.\n */\nGeoJsonDataSource.prototype.load = function (data, options) {\n  return preload(this, data, options, true);\n};\n\n/**\n * Asynchronously loads the provided GeoJSON or TopoJSON data, without replacing any existing data.\n *\n * @param {Resource|string|object} data A url, GeoJSON object, or TopoJSON object to be loaded.\n * @param {GeoJsonDataSource.LoadOptions} [options] An object specifying configuration options\n *\n * @returns {Promise<GeoJsonDataSource>} a promise that will resolve when the GeoJSON is loaded.\n */\nGeoJsonDataSource.prototype.process = function (data, options) {\n  return preload(this, data, options, false);\n};\n\nfunction preload(that, data, options, clear) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(data)) {\n    throw new DeveloperError(\"data is required.\");\n  }\n  //>>includeEnd('debug');\n\n  DataSource.setLoading(that, true);\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  // User specified credit\n  let credit = options.credit;\n  if (typeof credit === \"string\") {\n    credit = new Credit(credit);\n  }\n  that._credit = credit;\n\n  let promise = data;\n  let sourceUri = options.sourceUri;\n  if (typeof data === \"string\" || data instanceof Resource) {\n    data = Resource.createIfNeeded(data);\n    promise = data.fetchJson();\n    sourceUri = defaultValue(sourceUri, data.getUrlComponent());\n\n    // Add resource credits to our list of credits to display\n    const resourceCredits = that._resourceCredits;\n    const credits = data.credits;\n    if (defined(credits)) {\n      const length = credits.length;\n      for (let i = 0; i < length; i++) {\n        resourceCredits.push(credits[i]);\n      }\n    }\n  }\n\n  options = {\n    describe: defaultValue(options.describe, defaultDescribeProperty),\n    markerSize: defaultValue(options.markerSize, defaultMarkerSize),\n    markerSymbol: defaultValue(options.markerSymbol, defaultMarkerSymbol),\n    markerColor: defaultValue(options.markerColor, defaultMarkerColor),\n    strokeWidthProperty: new ConstantProperty(\n      defaultValue(options.strokeWidth, defaultStrokeWidth)\n    ),\n    strokeMaterialProperty: new ColorMaterialProperty(\n      defaultValue(options.stroke, defaultStroke)\n    ),\n    fillMaterialProperty: new ColorMaterialProperty(\n      defaultValue(options.fill, defaultFill)\n    ),\n    clampToGround: defaultValue(options.clampToGround, defaultClampToGround),\n  };\n\n  return Promise.resolve(promise)\n    .then(function (geoJson) {\n      return load(that, geoJson, options, sourceUri, clear);\n    })\n    .catch(function (error) {\n      DataSource.setLoading(that, false);\n      that._error.raiseEvent(that, error);\n      throw error;\n    });\n}\n\n/**\n * Updates the data source to the provided time.  This function is optional and\n * is not required to be implemented.  It is provided for data sources which\n * retrieve data based on the current animation time or scene state.\n * If implemented, update will be called by {@link DataSourceDisplay} once a frame.\n *\n * @param {JulianDate} time The simulation time.\n * @returns {boolean} True if this data source is ready to be displayed at the provided time, false otherwise.\n */\nGeoJsonDataSource.prototype.update = function (time) {\n  return true;\n};\n\nfunction load(that, geoJson, options, sourceUri, clear) {\n  let name;\n  if (defined(sourceUri)) {\n    name = getFilenameFromUri(sourceUri);\n  }\n\n  if (defined(name) && that._name !== name) {\n    that._name = name;\n    that._changed.raiseEvent(that);\n  }\n\n  const typeHandler = geoJsonObjectTypes[geoJson.type];\n  if (!defined(typeHandler)) {\n    throw new RuntimeError(`Unsupported GeoJSON object type: ${geoJson.type}`);\n  }\n\n  //Check for a Coordinate Reference System.\n  const crs = geoJson.crs;\n  let crsFunction = crs !== null ? defaultCrsFunction : null;\n\n  if (defined(crs)) {\n    if (!defined(crs.properties)) {\n      throw new RuntimeError(\"crs.properties is undefined.\");\n    }\n\n    const properties = crs.properties;\n    if (crs.type === \"name\") {\n      crsFunction = crsNames[properties.name];\n      if (!defined(crsFunction)) {\n        throw new RuntimeError(`Unknown crs name: ${properties.name}`);\n      }\n    } else if (crs.type === \"link\") {\n      let handler = crsLinkHrefs[properties.href];\n      if (!defined(handler)) {\n        handler = crsLinkTypes[properties.type];\n      }\n\n      if (!defined(handler)) {\n        throw new RuntimeError(\n          `Unable to resolve crs link: ${JSON.stringify(properties)}`\n        );\n      }\n\n      crsFunction = handler(properties);\n    } else if (crs.type === \"EPSG\") {\n      crsFunction = crsNames[`EPSG:${properties.code}`];\n      if (!defined(crsFunction)) {\n        throw new RuntimeError(`Unknown crs EPSG code: ${properties.code}`);\n      }\n    } else {\n      throw new RuntimeError(`Unknown crs type: ${crs.type}`);\n    }\n  }\n\n  return Promise.resolve(crsFunction).then(function (crsFunction) {\n    if (clear) {\n      that._entityCollection.removeAll();\n    }\n\n    // null is a valid value for the crs, but means the entire load process becomes a no-op\n    // because we can't assume anything about the coordinates.\n    if (crsFunction !== null) {\n      typeHandler(that, geoJson, geoJson, crsFunction, options);\n    }\n\n    return Promise.all(that._promises).then(function () {\n      that._promises.length = 0;\n      DataSource.setLoading(that, false);\n      return that;\n    });\n  });\n}\n\n/**\n * This callback is displayed as part of the GeoJsonDataSource class.\n * @callback GeoJsonDataSource.describe\n * @param {object} properties The properties of the feature.\n * @param {string} nameProperty The property key that Cesium estimates to have the name of the feature.\n */\nexport default GeoJsonDataSource;\n","import axios from \"axios\";\r\nimport * as Cesium from \"cesium\";\r\nimport { encodeFloatToDouble } from \"@/utils/common\";\r\nimport { mat4 } from \"gl-matrix\";\r\n\r\nlet VBO: WebGLBuffer;\r\n\r\nexport class CesiumSymbol {\r\n  vertexAddress: string;\r\n  fragmentAddress: string;\r\n  symbolImageAddress: string;\r\n  paletteImageAddress: string;\r\n  descriptionAddress: string;\r\n  poistionAddress: string;\r\n\r\n  vertexScript: string | null = null;\r\n  fragmentScript: string | null = null;\r\n  symbolImage: HTMLImageElement | null = null;\r\n  paletteImage: HTMLImageElement | null = null;\r\n  vertexArray: number[] = [];\r\n  instanceNum: number = 0;\r\n\r\n  program: WebGLProgram | null = null;\r\n  renderVAO: WebGLVertexArrayObject | null = null;\r\n  debugVAO: WebGLVertexArrayObject | null = null;\r\n  symbolTexture: WebGLTexture | null = null;\r\n  paletteTexture: WebGLTexture | null = null;\r\n  constructor(vertexAddress: string, fragmentAddress: string, symbolImageAddress: string, paletteImageAddress: string, descriptionAddress: string, poistionAddress: string) {\r\n    this.vertexAddress = vertexAddress;\r\n    this.fragmentAddress = fragmentAddress;\r\n    this.symbolImageAddress = symbolImageAddress;\r\n    this.paletteImageAddress = paletteImageAddress;\r\n    this.descriptionAddress = descriptionAddress;\r\n    this.poistionAddress = poistionAddress;\r\n  }\r\n\r\n  async prepareData(number: number, type?: string) {\r\n    const vertexScriptPromise: Promise<string> = axios.get(this.vertexAddress).then((res) => res.data);\r\n    const fragmentScriptPromise: Promise<string> = axios.get(this.fragmentAddress).then((res) => res.data);\r\n    const symbolImagePromise: Promise<HTMLImageElement> = new Promise((resolve, reject) => {\r\n      const symbolImage = new Image();\r\n      symbolImage.src = this.symbolImageAddress;\r\n      symbolImage.onload = () => {\r\n        resolve(symbolImage);\r\n      };\r\n    });\r\n    const paletteImagePromise: Promise<HTMLImageElement> = new Promise((resolve, reject) => {\r\n      const paletteImage = new Image();\r\n      paletteImage.src = this.paletteImageAddress;\r\n      paletteImage.onload = () => {\r\n        resolve(paletteImage);\r\n      };\r\n    });\r\n    const descriptionPromise = axios.get(this.descriptionAddress).then((res) => res.data);\r\n    const positionPromise = axios.get(this.poistionAddress).then((res) => res.data);\r\n\r\n    return Promise.all([vertexScriptPromise, fragmentScriptPromise, symbolImagePromise, paletteImagePromise, descriptionPromise, positionPromise]).then((res) => {\r\n      this.vertexScript = res[0];\r\n      this.fragmentScript = res[1];\r\n      this.symbolImage = res[2];\r\n      this.paletteImage = res[3];\r\n      const sampleArray: number[] = [];\r\n      const positionHigh: number[] = [];\r\n      const positionLow: number[] = [];\r\n      const rotationArray: number[] = [];\r\n      const arr = (res[4] as any).markers.description;\r\n      if (type) {\r\n        for (let i = 0; i < arr.length; i++) {\r\n          if (arr[i].name === type) {\r\n            const instanceNum = Math.ceil(arr[i].length / number);\r\n            for (let j = 0; j < (res[5] as any).features.length; j++) {\r\n              const item = (res[5] as any).features[j];\r\n              const coord = Cesium.Cartesian3.fromDegrees(item.geometry.coordinates[0], item.geometry.coordinates[1]);\r\n              const positionX = encodeFloatToDouble(coord.x);\r\n              const positionY = encodeFloatToDouble(coord.y);\r\n              const positionZ = encodeFloatToDouble(coord.z);\r\n              for (let k = 0; k < instanceNum; k++) {\r\n                sampleArray.push(arr[i].base, arr[i].length, k, arr[i].ID);\r\n                positionHigh.push(positionX[0], positionY[0], positionZ[0]);\r\n                positionLow.push(positionX[1], positionY[1], positionZ[1]);\r\n                rotationArray.push(0);\r\n              }\r\n            }\r\n          }\r\n        }\r\n        this.instanceNum = rotationArray.length;\r\n        this.vertexArray = [...sampleArray, ...positionHigh, ...positionLow, ...rotationArray];\r\n      } else {\r\n        for (let j = 0; j < (res[5] as any).features.length; j++) {\r\n          let randomNumber;\r\n          do {\r\n            randomNumber = Math.floor(Math.random() * 6);\r\n          } while (randomNumber === 3);\r\n          const rotation = 360 * Math.random();\r\n          const instanceNum = Math.ceil(arr[randomNumber].length / number);\r\n          const item = (res[5] as any).features[j];\r\n          const coord = Cesium.Cartesian3.fromDegrees(item.geometry.coordinates[0], item.geometry.coordinates[1]);\r\n          const positionX = encodeFloatToDouble(coord.x);\r\n          const positionY = encodeFloatToDouble(coord.y);\r\n          const positionZ = encodeFloatToDouble(coord.z);\r\n          for (let k = 0; k < instanceNum; k++) {\r\n            sampleArray.push(arr[randomNumber].base, arr[randomNumber].length, k, arr[randomNumber].ID);\r\n            positionHigh.push(positionX[0], positionY[0], positionZ[0]);\r\n            positionLow.push(positionX[1], positionY[1], positionZ[1]);\r\n            rotationArray.push(rotation);\r\n          }\r\n        }\r\n        this.instanceNum = rotationArray.length;\r\n        this.vertexArray = [...sampleArray, ...positionHigh, ...positionLow, ...rotationArray];\r\n      }\r\n    });\r\n  }\r\n\r\n  prepareRenderResource(gl: WebGL2RenderingContext) {\r\n    if (this.renderVAO === null) {\r\n      const vShader = gl.createShader(gl.VERTEX_SHADER)!;\r\n      const fShader = gl.createShader(gl.FRAGMENT_SHADER)!;\r\n      gl.shaderSource(vShader, this.vertexScript!);\r\n      gl.shaderSource(fShader, this.fragmentScript!);\r\n      gl.compileShader(vShader);\r\n      gl.compileShader(fShader);\r\n\r\n      this.program = gl.createProgram()!;\r\n      gl.attachShader(this.program, vShader);\r\n      gl.attachShader(this.program, fShader);\r\n      gl.linkProgram(this.program);\r\n\r\n      this.renderVAO = gl.createVertexArray();\r\n      gl.bindVertexArray(this.renderVAO);\r\n      VBO = gl.createBuffer()!;\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, VBO);\r\n      gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.vertexArray), gl.STATIC_DRAW);\r\n      gl.enableVertexAttribArray(0);\r\n      gl.vertexAttribPointer(0, 4, gl.FLOAT, false, 4 * 4, 0);\r\n      gl.vertexAttribDivisor(0, 1);\r\n      gl.enableVertexAttribArray(1);\r\n      gl.vertexAttribPointer(1, 3, gl.FLOAT, false, 4 * 3, this.instanceNum * 4 * 4);\r\n      gl.vertexAttribDivisor(1, 1);\r\n      gl.enableVertexAttribArray(2);\r\n      gl.vertexAttribPointer(2, 3, gl.FLOAT, false, 4 * 3, this.instanceNum * 7 * 4);\r\n      gl.vertexAttribDivisor(2, 1);\r\n      gl.enableVertexAttribArray(3);\r\n      gl.vertexAttribPointer(3, 1, gl.FLOAT, false, 4 * 1, this.instanceNum * 10 * 4);\r\n      gl.vertexAttribDivisor(3, 1);\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n      gl.bindVertexArray(null);\r\n\r\n      this.debugVAO = gl.createVertexArray();\r\n      gl.bindVertexArray(this.debugVAO);\r\n      const dubugVBO = gl.createBuffer();\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, dubugVBO);\r\n      gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-0.5, 0.5, 0.5, 0.5, -0.5, -0.5, -0.5, -0.5, 0.5, -0.5, 0.5, 0.5, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1]), gl.STATIC_DRAW);\r\n      gl.enableVertexAttribArray(0);\r\n      gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 4 * 2, 0);\r\n      gl.enableVertexAttribArray(1);\r\n      gl.vertexAttribPointer(1, 2, gl.FLOAT, false, 4 * 2, 4 * 2 * 6);\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n      gl.bindVertexArray(null);\r\n\r\n      if (this.symbolImage && this.paletteImage) {\r\n        this.symbolTexture = gl.createTexture();\r\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\r\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        gl.bindTexture(gl.TEXTURE_2D, this.symbolTexture);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.symbolImage);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\r\n        this.paletteTexture = gl.createTexture();\r\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\r\n        gl.bindTexture(gl.TEXTURE_2D, this.paletteTexture);\r\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.paletteImage);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n      }\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n      gl.bindVertexArray(null);\r\n      gl.bindTexture(gl.TEXTURE_2D, null);\r\n    }\r\n  }\r\n\r\n  render(gl: WebGL2RenderingContext, scale: number, lon: number, lat: number, number: number, uMatrix: number[]) {\r\n    gl.disable(gl.CULL_FACE);\r\n    gl.disable(gl.BLEND);\r\n    gl.disable(gl.DEPTH_TEST);\r\n    gl.disable(gl.SCISSOR_TEST);\r\n    gl.scissor(0, 0, 2048, 958);\r\n    gl.useProgram(this.program);\r\n    const modelMatrix = mat4.create();\r\n    mat4.identity(modelMatrix);\r\n    mat4.scale(modelMatrix, modelMatrix, [scale * window.devicePixelRatio, scale * window.devicePixelRatio, 1.0]);\r\n    const symbolMatrixLoc = gl.getUniformLocation(this.program!, \"u_symbolMatrix\");\r\n    gl.uniformMatrix4fv(symbolMatrixLoc, false, modelMatrix);\r\n    const bufferSizeLoc = gl.getUniformLocation(this.program!, \"u_bufferSize\");\r\n    gl.uniform2f(bufferSizeLoc, gl.canvas.width, gl.canvas.height);\r\n    const center = Cesium.Cartesian3.fromDegrees(lon, lat);\r\n    const positionX = encodeFloatToDouble(center.x);\r\n    const positionY = encodeFloatToDouble(center.y);\r\n    const positionZ = encodeFloatToDouble(center.z);\r\n    const centerHighLoc = gl.getUniformLocation(this.program!, \"u_cartesianCenterHigh\");\r\n    gl.uniform3f(centerHighLoc, positionX[0], positionY[0], positionZ[0]);\r\n    const centerLowLoc = gl.getUniformLocation(this.program!, \"u_cartesianCenterLow\");\r\n    gl.uniform3f(centerLowLoc, positionX[1], positionY[1], positionZ[1]);\r\n    const uMatrixLoc = gl.getUniformLocation(this.program!, \"u_matrix\");\r\n    gl.uniformMatrix4fv(uMatrixLoc, false, uMatrix);\r\n\r\n    gl.activeTexture(gl.TEXTURE0);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.symbolTexture);\r\n    gl.activeTexture(gl.TEXTURE1);\r\n    gl.bindTexture(gl.TEXTURE_2D, this.paletteTexture);\r\n    const symbolTextureLoc = gl.getUniformLocation(this.program!, \"symbolTexture\");\r\n    const paletteTextureLoc = gl.getUniformLocation(this.program!, \"paletteTexture\");\r\n    gl.uniform1i(symbolTextureLoc, 0);\r\n    gl.uniform1i(paletteTextureLoc, 1);\r\n    // gl.bindVertexArray(this.debugVAO);\r\n    gl.bindVertexArray(this.renderVAO);\r\n\r\n    gl.drawArraysInstanced(gl.TRIANGLE_STRIP, 0, number, this.instanceNum);\r\n    // gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n\r\n    gl.bindVertexArray(null);\r\n    gl.bindTexture(gl.TEXTURE_2D, null);\r\n    gl.useProgram(null);\r\n  }\r\n}\r\n","import { defineComponent, ref, onMounted } from \"vue\";\nimport { Ion, Viewer } from \"cesium\";\nimport * as Cesium from \"cesium\";\nimport \"cesium/Build/Cesium/Widgets/widgets.css\";\nimport { CesiumSymbol } from \"@/utils/cesium-symbol\";\nexport default defineComponent({\n  setup() {\n    const container = ref();\n    Ion.defaultAccessToken = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIxNjRiYjA0OS0wYTNjLTQwODItYjhmOS1kNTA3NTNlMzhiZWIiLCJpZCI6MTcxNjM3LCJpYXQiOjE2OTcxODE0NDN9.NXFWJtgHshH3lJbrl9QmfjGM3-KRRoQpy5827zZJJV0\";\n    const initMap = async () => {\n      const cesiumSymbol = new CesiumSymbol(`${process.env.VUE_APP_RESOURCE_PREFIX}/symbol/shader/symbol3D.vert.glsl`, `${process.env.VUE_APP_RESOURCE_PREFIX}/symbol/shader/symbol3D.frag.glsl`, `${process.env.VUE_APP_RESOURCE_PREFIX}/symbol/texture/strip_z.png`, `${process.env.VUE_APP_RESOURCE_PREFIX}/symbol/texture/palette_z.png`, `${process.env.VUE_APP_RESOURCE_PREFIX}/symbol/json/tbvs_z.json`, `${process.env.VUE_APP_RESOURCE_PREFIX}/symbol/json/output.geojson`);\n      await cesiumSymbol.prepareData(64);\n      const view = new Viewer(container.value, {\n        msaaSamples: 2,\n        requestRenderMode: true,\n        maximumRenderTimeChange: Infinity\n        // terrainProvider: Cesium.createWorldTerrain(),\n      });\n\n      view.scene.postProcessStages.fxaa.enabled = true;\n      // view.scene.globe.show = false;\n      view.camera.setView({\n        destination: Cesium.Cartesian3.fromDegrees(118.81259, 32.048116, 400000),\n        orientation: {\n          heading: Cesium.Math.toRadians(0.0),\n          pitch: Cesium.Math.toRadians(-90.0)\n        }\n      });\n      const dataSource = new Cesium.GeoJsonDataSource();\n      await dataSource.load(`${process.env.VUE_APP_RESOURCE_PREFIX}/symbol/json/crossroad_NJ.geojson`);\n      view.dataSources.add(dataSource);\n      dataSource.entities.values.forEach(function (entity) {\n        entity.billboard = new Cesium.BillboardGraphics({\n          image: `${process.env.VUE_APP_RESOURCE_PREFIX}/symbol/texture/交叉路口.png`,\n          width: 32,\n          height: 32 // 图标的高度\n        });\n      });\n\n      function _render_three_frame(scene, frustum, pass) {\n        if (pass === \"GLOBE\") {\n          const gl = scene.context._gl;\n          cesiumSymbol.prepareRenderResource(gl);\n          cesiumSymbol.render(gl, 60, 118.81259, 32.048116, 64, Cesium.Matrix4.toArray(scene.context.uniformState.viewProjection));\n        }\n      }\n      view.scene.render_external_frame_functions = [_render_three_frame];\n      // if (!(view as any)._cesiumWidget.scene.render_external_frame_functions) (view.scene as any).render_external_frame_functions = [];\n      // (view as any)._cesiumWidget.scene.render_external_frame_functions.push(_render_three_frame);\n    };\n\n    onMounted(() => {\n      initMap();\n    });\n    return {\n      container\n    };\n  }\n});","/* unplugin-vue-components disabled */import { render } from \"./CesiumSymbolInstance.vue?vue&type=template&id=6795865f&scoped=true&ts=true\"\nimport script from \"./CesiumSymbolInstance.vue?vue&type=script&lang=ts\"\nexport * from \"./CesiumSymbolInstance.vue?vue&type=script&lang=ts\"\n\nimport \"./CesiumSymbolInstance.vue?vue&type=style&index=0&id=6795865f&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6795865f\"]])\n\nexport default __exports__"],"names":["_hoisted_1","class","ref","render","_ctx","_cache","$props","$setup","$data","$options","getFilenameFromUri","uri","defined","DeveloperError","uriObject","Uri","normalize","path","index","lastIndexOf","substr","PinBuilder","this","prototype","fromColor","color","size","createPin","undefined","fromUrl","url","fromMakiIconId","id","buildModuleUrl","encodeURIComponent","fromText","text","colorScratch","Color","drawPin","context2D","save","scale","fillStyle","toCssColorString","strokeStyle","brighten","lineWidth","beginPath","moveTo","lineTo","bezierCurveTo","closePath","fill","stroke","restore","drawIcon","image","imageSize","sizeX","sizeY","width","height","x","Math","round","y","globalCompositeOperation","drawImage","BLACK","fillRect","WHITE","stringifyScratch","Array","label","cache","JSON","stringify","item","canvas","document","createElement","getContext","resource","Resource","createIfNeeded","promise","fetchImage","then","writeTextToCanvas","font","array","n","t","j","length","i","transform","identity","x0","y0","kx","ky","dx","translate","dy","input","output","topology","o","objects","type","features","geometries","map","feature","bbox","properties","geometry","object","transformPoint","arcs","arc","points","pop","a","k","push","reverse","point","p","line","ring","polygon","coordinates","defaultCrsFunction","Cartesian3","fromDegrees","crsNames","crsLinkHrefs","crsLinkTypes","defaultMarkerSymbol","defaultMarkerSize","defaultMarkerColor","ROYALBLUE","defaultStroke","YELLOW","defaultStrokeWidth","defaultFill","fromBytes","defaultClampToGround","sizes","small","medium","large","simpleStyleIdentifiers","defaultDescribe","nameProperty","html","key","hasOwnProperty","indexOf","value","createDescriptionCallback","describe","description","time","result","defaultDescribeProperty","CallbackProperty","createObject","geoJson","entityCollection","finalId","getById","createGuid","entity","getOrCreateEntity","name","title","namePropertyPrecedence","Number","MAX_VALUE","lowerKey","toLowerCase","test","ConstantProperty","coordinatesArrayToCartesianArray","crsFunction","positions","geoJsonObjectTypes","Feature","processFeature","FeatureCollection","processFeatureCollection","GeometryCollection","processGeometryCollection","LineString","processLineString","MultiLineString","processMultiLineString","MultiPoint","processMultiPoint","MultiPolygon","processMultiPolygon","Point","processPoint","Polygon","processPolygon","Topology","processTopology","geometryTypes","dataSource","notUsed","options","_entityCollection","RuntimeError","geometryType","geometryHandler","featureCollection","len","geometryCollection","createPoint","symbol","markerSymbol","markerColor","markerSize","cssColor","fromCssColorString","defaultValue","canvasOrPromise","_pinBuilder","toUpperCase","billboard","BillboardGraphics","verticalOrigin","VerticalOrigin","BOTTOM","clampToGround","heightReference","HeightReference","CLAMP_TO_GROUND","position","ConstantPositionProperty","Promise","resolve","catch","_promises","createLineString","material","strokeMaterialProperty","widthProperty","strokeWidthProperty","opacity","getValue","clone","alpha","ColorMaterialProperty","polylineGraphics","PolylineGraphics","polyline","arcType","ArcType","RHUMB","lineStrings","createPolygon","outlineColorProperty","fillMaterialProperty","fillColor","materialColor","PolygonGraphics","outline","outlineColor","outlineWidth","holes","PolygonHierarchy","hierarchy","perPositionHeight","polygons","property","topojson","typeHandler","GeoJsonDataSource","_name","_changed","Event","_error","_isLoading","_loading","EntityCollection","_entityCluster","EntityCluster","_credit","_resourceCredits","preload","that","data","clear","DataSource","setLoading","EMPTY_OBJECT","credit","Credit","sourceUri","fetchJson","getUrlComponent","resourceCredits","credits","strokeWidth","load","error","raiseEvent","crs","handler","href","code","removeAll","all","Object","defineProperties","get","set","clock","writable","entities","isLoading","changedEvent","errorEvent","loadingEvent","show","clustering","process","update","VBO","CesiumSymbol","constructor","vertexAddress","fragmentAddress","symbolImageAddress","paletteImageAddress","descriptionAddress","poistionAddress","_defineProperty","prepareData","number","vertexScriptPromise","axios","res","fragmentScriptPromise","symbolImagePromise","reject","symbolImage","Image","src","onload","paletteImagePromise","paletteImage","descriptionPromise","positionPromise","vertexScript","fragmentScript","sampleArray","positionHigh","positionLow","rotationArray","arr","markers","instanceNum","ceil","coord","Cesium","positionX","encodeFloatToDouble","positionY","positionZ","z","base","ID","vertexArray","randomNumber","floor","random","rotation","prepareRenderResource","gl","renderVAO","vShader","createShader","VERTEX_SHADER","fShader","FRAGMENT_SHADER","shaderSource","compileShader","program","createProgram","attachShader","linkProgram","createVertexArray","bindVertexArray","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","vertexAttribDivisor","debugVAO","dubugVBO","symbolTexture","createTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","paletteTexture","lon","lat","uMatrix","disable","CULL_FACE","BLEND","DEPTH_TEST","SCISSOR_TEST","scissor","useProgram","modelMatrix","mat4","window","devicePixelRatio","symbolMatrixLoc","getUniformLocation","uniformMatrix4fv","bufferSizeLoc","uniform2f","center","centerHighLoc","uniform3f","centerLowLoc","uMatrixLoc","activeTexture","TEXTURE0","TEXTURE1","symbolTextureLoc","paletteTextureLoc","uniform1i","drawArraysInstanced","TRIANGLE_STRIP","setup","container","Ion","defaultAccessToken","initMap","async","cesiumSymbol","view","Viewer","msaaSamples","requestRenderMode","maximumRenderTimeChange","Infinity","scene","postProcessStages","fxaa","enabled","camera","setView","destination","orientation","heading","toRadians","pitch","_render_three_frame","frustum","pass","context","_gl","toArray","uniformState","viewProjection","dataSources","add","values","forEach","render_external_frame_functions","__exports__"],"sourceRoot":""}