{"version":3,"file":"js/666.36b92189.js","mappings":"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","sources":["webpack://graduate/./node_modules/rbush/rbush.min.js","webpack://graduate/./src/views/OpenLayersSymbolInstance.vue?aaa9","webpack://graduate/./node_modules/ol/style/Image.js","webpack://graduate/./node_modules/ol/colorlike.js","webpack://graduate/./node_modules/ol/style/RegularShape.js","webpack://graduate/./node_modules/ol/style/Circle.js","webpack://graduate/./node_modules/ol/style/Fill.js","webpack://graduate/./node_modules/ol/style/Stroke.js","webpack://graduate/./node_modules/ol/style/Style.js","webpack://graduate/./node_modules/ol/style/IconImage.js","webpack://graduate/./node_modules/ol/style/Icon.js","webpack://graduate/./node_modules/ol/style/Text.js","webpack://graduate/./node_modules/ol/expr/expression.js","webpack://graduate/./node_modules/ol/expr/cpu.js","webpack://graduate/./node_modules/ol/render/canvas/style.js","webpack://graduate/./node_modules/ol/layer/BaseVector.js","webpack://graduate/./node_modules/ol/render/canvas/Instruction.js","webpack://graduate/./node_modules/ol/render/VectorContext.js","webpack://graduate/./node_modules/ol/render/canvas/Builder.js","webpack://graduate/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://graduate/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://graduate/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://graduate/./node_modules/ol/geom/flat/linechunk.js","webpack://graduate/./node_modules/ol/geom/flat/straightchunk.js","webpack://graduate/./node_modules/ol/render/canvas/TextBuilder.js","webpack://graduate/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://graduate/./node_modules/ol/renderer/canvas/Layer.js","webpack://graduate/./node_modules/ol/geom/flat/textpath.js","webpack://graduate/./node_modules/ol/geom/flat/length.js","webpack://graduate/./node_modules/ol/render/canvas/Executor.js","webpack://graduate/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://graduate/./node_modules/ol/render/canvas/Immediate.js","webpack://graduate/./node_modules/ol/render/canvas/hitdetect.js","webpack://graduate/./node_modules/ol/renderer/vector.js","webpack://graduate/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://graduate/./node_modules/ol/layer/Vector.js","webpack://graduate/./src/utils/ol-symbol.ts","webpack://graduate/./node_modules/ol/Feature.js","webpack://graduate/./node_modules/ol/geom/GeometryCollection.js","webpack://graduate/./node_modules/ol/format/Feature.js","webpack://graduate/./node_modules/ol/format/JSONFeature.js","webpack://graduate/./node_modules/ol/geom/flat/interpolate.js","webpack://graduate/./node_modules/ol/geom/LineString.js","webpack://graduate/./node_modules/ol/geom/MultiLineString.js","webpack://graduate/./node_modules/ol/geom/MultiPoint.js","webpack://graduate/./node_modules/ol/geom/flat/center.js","webpack://graduate/./node_modules/ol/geom/MultiPolygon.js","webpack://graduate/./node_modules/ol/format/GeoJSON.js","webpack://graduate/./node_modules/ol/structs/RBush.js","webpack://graduate/./node_modules/ol/source/VectorEventType.js","webpack://graduate/./node_modules/ol/loadingstrategy.js","webpack://graduate/./node_modules/ol/featureloader.js","webpack://graduate/./node_modules/ol/source/Vector.js","webpack://graduate/./src/views/OpenLayersSymbolInstance.vue","webpack://graduate/./src/views/OpenLayersSymbolInstance.vue?d007"],"sourcesContent":["!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-a93dd2e6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"container\",\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512);\n}","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`'\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time'\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided'\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`'\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\n\nimport {ascending} from '../array.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Number: 'number',\n  String: 'string',\n  Get: 'get',\n  Var: 'var',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Expression} Parser\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Number]: createParser(withArgs(1, Infinity, AnyType), NumberType),\n  [Ops.String]: createParser(withArgs(1, Infinity, AnyType), StringType),\n  [Ops.Get]: createParser(withGetArgs, AnyType),\n  [Ops.Var]: createParser(withVarArgs, AnyType),\n  [Ops.Resolution]: createParser(withNoArgs, NumberType),\n  [Ops.Any]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.All]: createParser(withArgs(2, Infinity, BooleanType), BooleanType),\n  [Ops.Not]: createParser(withArgs(1, 1, BooleanType), BooleanType),\n  [Ops.Equal]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.NotEqual]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    withArgs(2, 2, AnyType),\n    BooleanType\n  ),\n  [Ops.LessThan]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.LessThanOrEqualTo]: createParser(withArgs(2, 2, AnyType), BooleanType),\n  [Ops.Multiply]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Divide]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Add]: createParser(withArgs(2, Infinity, NumberType), NumberType),\n  [Ops.Subtract]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Clamp]: createParser(withArgs(3, 3, NumberType), NumberType),\n  [Ops.Mod]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Pow]: createParser(withArgs(2, 2, NumberType), NumberType),\n  [Ops.Abs]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Floor]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Ceil]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Round]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Sin]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Cos]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Atan]: createParser(withArgs(1, 2, NumberType), NumberType),\n  [Ops.Sqrt]: createParser(withArgs(1, 1, NumberType), NumberType),\n  [Ops.Match]: createParser(\n    withArgs(4, Infinity, StringType | NumberType),\n    AnyType\n  ),\n};\n\n/**\n * @typedef {function(Array, ParsingContext):Array<Expression>} ArgValidator\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for get operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context) {\n  if (encoded.length !== 2) {\n    throw new Error('Expected 1 argument for var operation');\n  }\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for var operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.variables.add(arg.value);\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgs(minArgs, maxArgs, argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for operation ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      throw new Error(\n        `Expected ${minArgs} to ${maxArgs} arguments for operation ${operation}, got ${argCount}`\n      );\n    }\n\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            ` : got ${gotType} but expected ${expectedType}`\n        );\n      }\n      args[i] = expression;\n    }\n\n    return args;\n  };\n}\n\n/**\n * @param {ArgValidator} argValidator The argument validator.\n * @param {number} returnType The return type.\n * @return {Parser} The parser.\n */\nfunction createParser(argValidator, returnType) {\n  return function (encoded, context) {\n    const operator = encoded[0];\n    const args = argValidator(encoded, context);\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = expression.args[0];\n  if (!(nameExpression instanceof LiteralExpression)) {\n    throw new Error('Expected literal name');\n  }\n  const name = nameExpression.value;\n  if (typeof name !== 'string') {\n    throw new Error('Expected string name');\n  }\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    for (let i = 0; i < length; ++i) {\n      styles[i] = evaluators[i](evaluationContext);\n    }\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","import WebGLTileLayer from \"ol/layer/WebGLTile.js\";\r\nimport axios from \"axios\";\r\nimport { encodeFloatToDouble } from \"@/utils/common\";\r\nimport { mat4 } from \"gl-matrix\";\r\n\r\nexport class CustomLayer extends WebGLTileLayer {\r\n  vertexAddress: string;\r\n  fragmentAddress: string;\r\n  symbolImageAddress: string;\r\n  paletteImageAddress: string;\r\n  descriptionAddress: string;\r\n  poistionAddress: string;\r\n\r\n  vertexScript: string | null = null;\r\n  fragmentScript: string | null = null;\r\n  symbolImage: HTMLImageElement | null = null;\r\n  paletteImage: HTMLImageElement | null = null;\r\n  vertexArray: number[] = [];\r\n  instanceNum: number = 0;\r\n  pixelSize: number = 25;\r\n\r\n  gl: WebGL2RenderingContext | null = null;\r\n  program: WebGLProgram | null = null;\r\n  renderVAO: WebGLVertexArrayObject | null = null;\r\n  symbolTexture: WebGLTexture | null = null;\r\n  paletteTexture: WebGLTexture | null = null;\r\n  constructor(vertexAddress: string, fragmentAddress: string, symbolImageAddress: string, paletteImageAddress: string, descriptionAddress: string, poistionAddress: string, pixelSize?: number) {\r\n    super({});\r\n    this.vertexAddress = vertexAddress;\r\n    this.fragmentAddress = fragmentAddress;\r\n    this.symbolImageAddress = symbolImageAddress;\r\n    this.paletteImageAddress = paletteImageAddress;\r\n    this.descriptionAddress = descriptionAddress;\r\n    this.poistionAddress = poistionAddress;\r\n    if (pixelSize) {\r\n      this.pixelSize = pixelSize;\r\n    }\r\n  }\r\n  async prepareData(number: number, type?: string) {\r\n    const vertexScriptPromise: Promise<string> = axios.get(this.vertexAddress).then((res) => res.data);\r\n    const fragmentScriptPromise: Promise<string> = axios.get(this.fragmentAddress).then((res) => res.data);\r\n    const symbolImagePromise: Promise<HTMLImageElement> = new Promise((resolve, reject) => {\r\n      const symbolImage = new Image();\r\n      symbolImage.src = this.symbolImageAddress;\r\n      symbolImage.onload = () => {\r\n        resolve(symbolImage);\r\n      };\r\n    });\r\n    const paletteImagePromise: Promise<HTMLImageElement> = new Promise((resolve, reject) => {\r\n      const paletteImage = new Image();\r\n      paletteImage.src = this.paletteImageAddress;\r\n      paletteImage.onload = () => {\r\n        resolve(paletteImage);\r\n      };\r\n    });\r\n    const descriptionPromise = axios.get(this.descriptionAddress).then((res) => res.data);\r\n    const positionPromise = axios.get(this.poistionAddress).then((res) => res.data);\r\n\r\n    return Promise.all([vertexScriptPromise, fragmentScriptPromise, symbolImagePromise, paletteImagePromise, descriptionPromise, positionPromise]).then((res) => {\r\n      this.vertexScript = res[0];\r\n      this.fragmentScript = res[1];\r\n      this.symbolImage = res[2];\r\n      this.paletteImage = res[3];\r\n      const sampleArray: number[] = [];\r\n      const position: number[] = [];\r\n\r\n      const rotationArray: number[] = [];\r\n      const arr = (res[4] as any).markers.description;\r\n      if (type) {\r\n        for (let i = 0; i < arr.length; i++) {\r\n          if (arr[i].name === type) {\r\n            const instanceNum = Math.ceil(arr[i].length / number);\r\n            for (let j = 0; j < (res[5] as any).features.length; j++) {\r\n              const item = (res[5] as any).features[j];\r\n              // const coord = fromLonLat([item.geometry.coordinates[0], item.geometry.coordinates[1]], \"EPSG:3857\");\r\n              // const coord = Cesium.Cartesian3.fromDegrees(item.geometry.coordinates[0], item.geometry.coordinates[1]);\r\n              const positionX = encodeFloatToDouble(item.geometry.coordinates[0]);\r\n              const positionY = encodeFloatToDouble(item.geometry.coordinates[1]);\r\n              for (let k = 0; k < instanceNum; k++) {\r\n                sampleArray.push(arr[i].base, arr[i].length, k, arr[i].ID);\r\n                position.push(positionX[0], positionY[0], positionX[1], positionY[1]);\r\n                rotationArray.push(0);\r\n              }\r\n            }\r\n          }\r\n        }\r\n        this.instanceNum = rotationArray.length;\r\n        this.vertexArray = [...sampleArray, ...position, ...rotationArray];\r\n      } else {\r\n        for (let j = 0; j < (res[5] as any).features.length; j++) {\r\n          let randomNumber;\r\n          do {\r\n            randomNumber = Math.floor(Math.random() * 6);\r\n          } while (randomNumber === 3);\r\n          const rotation = 360 * Math.random();\r\n          const instanceNum = Math.ceil(arr[randomNumber].length / number);\r\n          const item = (res[5] as any).features[j];\r\n          // const coord = fromLonLat([item.geometry.coordinates[0], item.geometry.coordinates[1]], \"EPSG:3857\");\r\n          // const coord = Cesium.Cartesian3.fromDegrees(item.geometry.coordinates[0], item.geometry.coordinates[1]);\r\n          const positionX = encodeFloatToDouble(item.geometry.coordinates[0]);\r\n          const positionY = encodeFloatToDouble(item.geometry.coordinates[1]);\r\n          for (let k = 0; k < instanceNum; k++) {\r\n            sampleArray.push(arr[randomNumber].base, arr[randomNumber].length, k, arr[randomNumber].ID);\r\n            position.push(positionX[0], positionY[0], positionX[1], positionY[1]);\r\n            rotationArray.push(rotation);\r\n          }\r\n        }\r\n        this.instanceNum = rotationArray.length;\r\n        this.vertexArray = [...sampleArray, ...position, ...rotationArray];\r\n      }\r\n    });\r\n  }\r\n\r\n  prepareRenderResource(gl: WebGL2RenderingContext) {\r\n    if (this.renderVAO === null) {\r\n      const vShader = gl.createShader(gl.VERTEX_SHADER)!;\r\n      const fShader = gl.createShader(gl.FRAGMENT_SHADER)!;\r\n      gl.shaderSource(vShader, this.vertexScript!);\r\n      gl.shaderSource(fShader, this.fragmentScript!);\r\n      gl.compileShader(vShader);\r\n      gl.compileShader(fShader);\r\n\r\n      this.program = gl.createProgram()!;\r\n      gl.attachShader(this.program, vShader);\r\n      gl.attachShader(this.program, fShader);\r\n      gl.linkProgram(this.program);\r\n\r\n      this.renderVAO = gl.createVertexArray();\r\n      gl.bindVertexArray(this.renderVAO);\r\n      const VBO = gl.createBuffer()!;\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, VBO);\r\n      gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.vertexArray), gl.STATIC_DRAW);\r\n      gl.enableVertexAttribArray(0);\r\n      gl.vertexAttribPointer(0, 4, gl.FLOAT, false, 4 * 4, 0);\r\n      gl.vertexAttribDivisor(0, 1);\r\n      gl.enableVertexAttribArray(1);\r\n      gl.vertexAttribPointer(1, 4, gl.FLOAT, false, 4 * 4, this.instanceNum * 4 * 4);\r\n      gl.vertexAttribDivisor(1, 1);\r\n      gl.enableVertexAttribArray(2);\r\n      gl.vertexAttribPointer(2, 1, gl.FLOAT, false, 4 * 1, this.instanceNum * 8 * 4);\r\n      gl.vertexAttribDivisor(2, 1);\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n      gl.bindVertexArray(null);\r\n\r\n      if (this.symbolImage && this.paletteImage) {\r\n        this.symbolTexture = gl.createTexture();\r\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\r\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        gl.bindTexture(gl.TEXTURE_2D, this.symbolTexture);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.symbolImage);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\r\n        this.paletteTexture = gl.createTexture();\r\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\r\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        gl.bindTexture(gl.TEXTURE_2D, this.paletteTexture);\r\n\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.paletteImage);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n      }\r\n    }\r\n  }\r\n  render(frameState: any, target: HTMLCanvasElement) {\r\n    const canvas = this.renderSources(frameState, []);\r\n    if (!this.gl) this.gl = target.getContext(\"webgl2\");\r\n    if (this.gl) {\r\n      this.prepareRenderResource(this.gl);\r\n\r\n      this.gl.useProgram(this.program);\r\n      const modelMatrix = mat4.create();\r\n      mat4.identity(modelMatrix);\r\n      mat4.scale(modelMatrix, modelMatrix, [this.pixelSize * window.devicePixelRatio, this.pixelSize * window.devicePixelRatio, 1.0]);\r\n      const symbolMatrixLoc = this.gl.getUniformLocation(this.program!, \"u_symbolMatrix\");\r\n      this.gl.uniformMatrix4fv(symbolMatrixLoc, false, modelMatrix);\r\n      const bufferSizeLoc = this.gl.getUniformLocation(this.program!, \"u_bufferSize\");\r\n      this.gl.uniform2f(bufferSizeLoc, this.gl.canvas.width, this.gl.canvas.height);\r\n\r\n      const positionX = encodeFloatToDouble(118.81259);\r\n      const positionY = encodeFloatToDouble(32.048116);\r\n\r\n      const centerHighLoc = this.gl.getUniformLocation(this.program!, \"u_mercatorCenterHigh\");\r\n      this.gl.uniform2f(centerHighLoc, positionX[0], positionY[0]);\r\n      const centerLowLoc = this.gl.getUniformLocation(this.program!, \"u_mercatorCenterLow\");\r\n      this.gl.uniform2f(centerLowLoc, positionX[1], positionY[1]);\r\n      const pixel_size = this.gl.getUniformLocation(this.program!, \"pixel_size\");\r\n      this.gl.uniform2f(pixel_size, frameState.size[0], frameState.size[1]);\r\n      const transform_a = this.gl.getUniformLocation(this.program!, \"transform_a\");\r\n      this.gl.uniform3f(transform_a, frameState.coordinateToPixelTransform[0], frameState.coordinateToPixelTransform[2], frameState.coordinateToPixelTransform[4]);\r\n      const transform_b = this.gl.getUniformLocation(this.program!, \"transform_b\");\r\n      this.gl.uniform3f(transform_b, frameState.coordinateToPixelTransform[1], frameState.coordinateToPixelTransform[3], frameState.coordinateToPixelTransform[5]);\r\n\r\n      this.gl.activeTexture(this.gl.TEXTURE0);\r\n      this.gl.bindTexture(this.gl.TEXTURE_2D, this.symbolTexture);\r\n      this.gl.activeTexture(this.gl.TEXTURE1);\r\n      this.gl.bindTexture(this.gl.TEXTURE_2D, this.paletteTexture);\r\n      const symbolTextureLoc = this.gl.getUniformLocation(this.program!, \"symbolTexture\");\r\n      const paletteTextureLoc = this.gl.getUniformLocation(this.program!, \"paletteTexture\");\r\n      this.gl.uniform1i(symbolTextureLoc, 0);\r\n      this.gl.uniform1i(paletteTextureLoc, 1);\r\n      this.gl.bindVertexArray(this.renderVAO);\r\n\r\n      this.gl.drawArraysInstanced(this.gl.TRIANGLE_STRIP, 0, 64, this.instanceNum);\r\n      // this.gl.drawArrays(this.gl.POINTS, 0, 6);\r\n\r\n      this.gl.bindVertexArray(null);\r\n      this.gl.bindTexture(this.gl.TEXTURE_2D, null);\r\n      this.gl.useProgram(null);\r\n    }\r\n\r\n    return canvas;\r\n  }\r\n}\r\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`'\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), options);\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source'\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","import { defineComponent, onMounted, ref } from \"vue\";\nimport OSM from \"ol/source/OSM.js\";\nimport { Map, View } from \"ol\";\nimport WebGLTileLayer from \"ol/layer/WebGLTile.js\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport { defaults as defaultControls } from \"ol/control\";\nimport { CustomLayer } from \"@/utils/ol-symbol\";\nimport { Icon, Style } from \"ol/style.js\";\nimport GeoJSON from \"ol/format/GeoJSON.js\";\nimport { Vector } from \"ol/source.js\";\nexport default defineComponent({\n  setup() {\n    const container = ref();\n    let map;\n    const OSMLayer = new WebGLTileLayer({\n      source: new OSM({\n        // url: \"https://tile.thunderforest.com/transport-dark/{z}/{x}/{y}.png?apikey=2d56ae4b9a10405c8d232dcdf2b94a6f\",\n        url: \"http://t0.tianditu.com/vec_w/wmts?tk=35a94ab5985969d0b93229c30db6abd6&SERVICE=WMTS&REQUEST=GetTile&VERSION=1.0.0&LAYER=vec&STYLE=default&TILEMATRIXSET=w&TILEMATRIX={z}&TILEROW={y}&TILECOL={x}&FORMAT=tiles\"\n      })\n    });\n    const customLayer = new CustomLayer(`${process.env.VUE_APP_RESOURCE_PREFIX}/symbol/shader/symbol-ol.vert.glsl`, `${process.env.VUE_APP_RESOURCE_PREFIX}/symbol/shader/symbol-ol.frag.glsl`, `${process.env.VUE_APP_RESOURCE_PREFIX}/symbol/texture/strip_z.png`, `${process.env.VUE_APP_RESOURCE_PREFIX}/symbol/texture/palette_z.png`, `${process.env.VUE_APP_RESOURCE_PREFIX}/symbol/json/tbvs_z.json`, `${process.env.VUE_APP_RESOURCE_PREFIX}/symbol/json/output.geojson`, 40);\n    const stylyFunction = () => {\n      return new Style({\n        image: new Icon({\n          src: `${process.env.VUE_APP_RESOURCE_PREFIX}/symbol/texture/交叉路口.png`,\n          scale: 0.3,\n          anchor: [0.5, 0.5] // 图标的锚点位置（相对于图标的宽度和高度）\n        })\n      });\n    };\n\n    const geojsonSource = new Vector({\n      url: `${process.env.VUE_APP_RESOURCE_PREFIX}/symbol/json/crossroad_NJ.geojson`,\n      format: new GeoJSON()\n    });\n    const vectorLayer = new VectorLayer({\n      source: geojsonSource,\n      style: stylyFunction // 使用样式函数渲染要素\n    });\n\n    const initMap = async () => {\n      console.log(OSMLayer, customLayer);\n      await customLayer.prepareData(64);\n      map = new Map({\n        target: container.value,\n        layers: [OSMLayer, vectorLayer, customLayer],\n        view: new View({\n          center: [118.81259, 32.048116],\n          projection: \"EPSG:4326\",\n          zoom: 10\n        }),\n        controls: defaultControls({\n          zoom: false,\n          rotate: false,\n          attribution: false\n        })\n      });\n    };\n    onMounted(() => {\n      initMap();\n    });\n    return {\n      container\n    };\n  }\n});","/* unplugin-vue-components disabled */import { render } from \"./OpenLayersSymbolInstance.vue?vue&type=template&id=a93dd2e6&scoped=true&ts=true\"\nimport script from \"./OpenLayersSymbolInstance.vue?vue&type=script&lang=ts\"\nexport * from \"./OpenLayersSymbolInstance.vue?vue&type=script&lang=ts\"\n\nimport \"./OpenLayersSymbolInstance.vue?vue&type=style&index=0&id=a93dd2e6&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-a93dd2e6\"]])\n\nexport default __exports__"],"names":["t","i","module","exports","this","r","e","a","h","n","o","s","l","Math","log","f","exp","u","sqrt","m","max","floor","c","min","p","d","x","length","_maxEntries","_minEntries","ceil","clear","indexOf","children","minX","minY","maxX","maxY","leaf","height","pop","push","prototype","all","_all","data","search","toBBox","collides","load","insert","_build","slice","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","_hoisted_1","ref","class","render","_ctx","_cache","$props","$setup","$data","$options","ImageStyle","constructor","options","opacity_","opacity","rotateWithView_","rotateWithView","rotation_","rotation","scale_","scale","scaleArray_","toSize","displacement_","displacement","declutterMode_","declutterMode","clone","getScale","getOpacity","Array","isArray","getRotation","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","abstract","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","getSize","setDisplacement","setOpacity","setRotateWithView","setRotation","setScale","listenImageChange","listener","unlistenImageChange","asColorLike","color","toString","RegularShape","undefined","super","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius","radius1","radius2_","radius2","angle_","angle","stroke_","stroke","size_","renderOptions_","style","getFill","getPoints","getRadius","getRadius2","getAngle","getStroke","size","setFill","createHitDetectionCanvas_","image","renderOptions","context","createCanvasContext2D","draw_","canvas","ImageState","LOADED","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","Infinity","r1","r2","tmp","alpha","PI","sin","b","miterRatio","k","maxr","bevelAdd","aa","bb","dd","ee","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","defaultLineCap","defaultLineJoin","lineDash","lineDashOffset","getColor","defaultStrokeStyle","getWidth","defaultLineWidth","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","defaultMiterLimit","add","maxRadius","translate","createPath_","defaultFillStyle","fillStyle","lineWidth","setLineDash","asArray","drawHitDetectionCanvas_","arc","startAngle","step","angle0","radiusC","lineTo","cos","closePath","CircleStyle","setRadius","Fill","color_","setColor","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","width","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","geometry","setGeometry","image_","renderer_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","text","zIndex_","zIndex","getGeometry","getRenderer","getText","getZIndex","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","feature","get","setZIndex","toFunction","obj","styleFunction","styles","assert","defaultStyles","createDefaultStyle","resolution","taintedTestContext","IconImage","EventTarget","src","crossOrigin","imageState","hitDetectionImage_","crossOrigin_","imageState_","IDLE","src_","tainted_","initializeImage_","Image","isTainted_","willReadFrequently","drawImage","getImageData","dispatchChangeEvent_","dispatchEvent","EventType","CHANGE","handleImageError_","ERROR","handleImageLoad_","replaceColor_","fillRect","getSrc","LOADING","HTMLImageElement","decodeFallback","then","catch","bind","document","createElement","ctx","getContext","globalCompositeOperation","asString","cacheKey","iconImage","iconImageCache","set","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","anchor","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","getUid","complete","iconImage_","getIconImage","offset_","offset","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","getHeight","addEventListener","removeEventListener","DEFAULT_FILL_COLOR","Text","font_","font","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","Object","keys","map","Number","ascending","typeName","type","names","namedType","includesType","join","broad","specific","overlapsType","oneType","otherType","LiteralExpression","value","CallExpression","operator","args","newParsingContext","variables","Set","properties","parse","encoded","Error","parseCallExpression","item","Ops","String","Get","Var","Any","All","Not","Resolution","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","parsers","createParser","withArgs","withGetArgs","withVarArgs","withNoArgs","arg","operation","minArgs","maxArgs","argType","argCount","plural","expression","gotType","expectedType","argValidator","returnType","parser","newEvaluationContext","NaN","buildExpression","expected","actual","compileExpression","compileAssertionExpression","compileAccessorExpression","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileMatchExpression","nameExpression","name","op","left","right","abs","round","atan2","atan","always","rulesToStyleFunction","rules","parsingContext","evaluator","buildRuleSet","evaluationContext","getPropertiesInternal","flatStylesToStyleFunction","flatStyles","evaluators","buildStyle","compiledRules","rule","filter","styleLength","j","someMatched","filterEvaluator","else","styleEvaluator","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","buildText","evaluateImage","buildImage","evaluateZIndex","numberEvaluator","empty","prefix","evaluateColor","colorLikeEvaluator","evaluateWidth","evaluateLineCap","stringEvaluator","evaluateLineJoin","evaluateLineDash","numberArrayEvaluator","evaluateLineDashOffset","evaluateMiterLimit","evaluateValue","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","buildIcon","buildShape","buildCircle","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","optionalColorLike","optionalString","optionalNumberArray","optionalNumber","optionalSize","optionalDeclutterMode","icon","pointsName","requireNumber","shape","evaluateRadius","circle","Circle","requireColorLike","requireNumberArray","array","requireSizeLike","property","Property","RENDER_ORDER","BaseVectorLayer","Layer","baseOptions","assign","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getFeatures","pixel","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","renderDeclutter","frameState","declutterTree","RBush","setRenderOrder","renderOrder","toStyleLike","toStyleFunction","changed","first","candidate","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","CanvasBuilder","tolerance","maxExtent","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinates","tmpCoordinate_","hitDetectionInstructions","state","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","flatCoordinates","stride","extent","getBufferedMaxExtent","tmpCoord","myEnd","ii","containsCoordinate","appendFlatLineCoordinates","end","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","coordinateRelationship","Relationship","INTERSECTING","drawCustomCoordinates_","ends","builderEnds","builderEnd","beginGeometry","getType","getStride","builderBegin","builderEndss","getOrientedFlatCoordinates","endss","getEndss","myEnds","CanvasInstruction","inflateMultiCoordinatesArray","getFlatCoordinates","getEnds","inflateCoordinatesArray","inflateCoordinates","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","begin","reverseSubArray","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","defaultLineDash","strokeStyleLineDashOffset","defaultLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","call","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","equals","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","buffer","CanvasImageBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","sharedData","origin","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","snap","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","x1","y1","x2","y2","segmentLength","lerp","y","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","start","TEXT_ALIGN","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoint","getCenter","getFlatMidpoints","getFlatInteriorPoint","interiorPoints","getFlatInteriorPoints","beg","w","keep","saveTextStates_","defaultPadding","p0","p1","p2","p3","intersects","getExtent","flatOffset","oo","cc","chunk","chunkBegin","range","drawChars_","strokeKey","textKey","defaultTextAlign","defaultTextBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","defaultFont","registerFont","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","canvasPool","pixelContext","createPixelContext","CanvasLayerRenderer","LayerRenderer","layer","container","renderedResolution","tempTransform","createTransform","pixelTransform","inversePixelTransform","containerReused","pixelContext_","col","row","clearRect","err","getBackground","getLayer","background","viewState","useContainer","target","transform","backgroundColor","layerClassName","getClassName","className","firstElementChild","HTMLCanvasElement","position","appendChild","transformOrigin","clipUnrotated","topLeft","getTopLeft","topRight","getTopRight","bottomRight","getBottomRight","bottomLeft","getBottomLeft","applyTransform","coordinateToPixelTransform","inverted","save","beginPath","moveTo","clip","dispatchRenderEvent_","hasListener","event","RenderEvent","preRender","RenderEventType","PRERENDER","postRender","POSTRENDER","getRenderTransform","center","dx1","dy1","sx","sy","dx2","dy2","composeTransform","disposeInternal","drawTextOnPath","startM","measureAndCacheTextWidth","cache","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","endX","endY","flat","rotate","result","singleSegment","previousAngle","replace","delta","iStart","charLength","index","len","chars","substring","lineStringLength","tmpExtent","createEmpty","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","RegExp","fromCharCode","horizontalTextAlign","align","test","createTextChunks","acc","line","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","key","textIsArray","split","reduce","widths","heights","lineWidths","getTextDimensions","renderWidth","contextInstructions","label","leftRight","strokeInstructions","fillInstructions","previousFont","lineHeight","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","centerX","centerY","anchorX","anchorY","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","createOrUpdate","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","drawImageOrLabel","repeatSize","restore","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","transform2D","transformSetFromArray","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","dx","dy","fn","coords","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","execute","executeHitDetection","ORDER","ExecutorGroup","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","forEachFeatureAtCoordinate","coordinate","hitTolerance","callback","declutteredFeatures","contextSize","newContext","extendCoordinate","indexes","getPixelIndexArray","imageData","includes","idx","zs","executor","isEmpty","builderTypes","jj","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","distance","pixelIndex","CanvasImmediateRenderer","squaredTolerance","userTransform","context_","extent_","transform_","transformRotation_","toFixed","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","globalAlpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simplifyTransformed","transformGeom2D","setTransform","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","transforms","features","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","clamp","g","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","parseInt","getSquaredTolerance","getTolerance","builderGroup","declutterBuilderGroup","circleReplay","textReplay","renderFeature","replayGroup","loading","renderFeatureInternal","simplifiedGeometry","renderGeometry","geometryRenderer","getGeometries","lineStringReplay","polygonReplay","imageBuilderGroup","imageReplay","textBuilderGroup","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","compositionContext_","renderWorlds","executorGroup","projection","projectionExtent","vectorSource","getSource","viewHints","ViewHint","ANIMATING","INTERACTING","multiWorld","getWrapX","canWrapX","worldWidth","endWorld","world","setupCompositionContext_","compositionContext","releaseCompositionContext_","releaseCanvas","renderFrame","layerState","layerStatesArray","layerIndex","makeScale","makeInverse","transformToString","hasRenderListeners","clipped","layerExtent","fromUserExtent","intersectsExtent","containsExtent","Promise","resolve","source","startX","matches","match","lastIndexOf","executorGroups","some","handleFontsChanged","getVisible","renderIfReadyAndVisible","prepareFrame","animating","interacting","ready","frameStateExtent","vectorLayerRevision","getRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","gutter","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","userProjection","getUserProjection","userExtent","toUserExtent","loadFeatures","toUserResolution","getTransformFromProjections","getSquaredRenderTolerance","dirty","getFeaturesInExtent","replayGroupInstructions","getOverlaps","VectorLayer","createRenderer","CustomLayer","WebGLTileLayer","vertexAddress","fragmentAddress","symbolImageAddress","paletteImageAddress","descriptionAddress","poistionAddress","pixelSize","_defineProperty","prepareData","number","vertexScriptPromise","axios","res","fragmentScriptPromise","symbolImagePromise","reject","symbolImage","paletteImagePromise","paletteImage","descriptionPromise","positionPromise","vertexScript","fragmentScript","sampleArray","rotationArray","arr","markers","description","instanceNum","positionX","encodeFloatToDouble","positionY","base","ID","vertexArray","randomNumber","random","prepareRenderResource","gl","renderVAO","vShader","createShader","VERTEX_SHADER","fShader","FRAGMENT_SHADER","shaderSource","compileShader","program","createProgram","attachShader","linkProgram","createVertexArray","bindVertexArray","VBO","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","vertexAttribDivisor","symbolTexture","createTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","paletteTexture","renderSources","useProgram","modelMatrix","mat4","window","devicePixelRatio","symbolMatrixLoc","getUniformLocation","uniformMatrix4fv","bufferSizeLoc","uniform2f","centerHighLoc","centerLowLoc","pixel_size","transform_a","uniform3f","transform_b","activeTexture","TEXTURE0","TEXTURE1","symbolTextureLoc","paletteTextureLoc","uniform1i","drawArraysInstanced","TRIANGLE_STRIP","Feature","BaseObject","geometryOrProperties","on","once","un","id_","geometryName_","geometryChangeKey_","addChangeListener","handleGeometryChanged_","getSimplifiedGeometry","setProperties","hasProperties","getProperties","setGeometryName","getGeometryName","getId","handleGeometryChange_","unlistenByKey","listen","createStyleFunction","setId","id","removeChangeListener","GeometryCollection","Geometry","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","forEach","geometryCollection","setGeometries","applyProperties","closestPointXY","closestPoint","minSquaredDistance","closestSquaredDistanceXY","containsXY","computeExtent","createOrUpdateEmpty","extend","cloneGeometries","geometriesArray","concat","simplifiedGeometryRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","transformFn","deltaX","deltaY","clonedGeometries","FeatureFormat","dataProjection","defaultFeatureProjection","supportedMediaTypes","getReadOptions","getProjection","readProjection","getUnits","setWorldExtent","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","transformed","equivalentProjection","decimals","power","JSONFeature","readFeatureFromObject","getObject","readFeaturesFromObject","object","readGeometryFromObject","readProjectionFromObject","JSON","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","interpolatePoint","fraction","dest","dimension","cumulativeLengths","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","mid","m0","m1","lineStringsCoordinateAtM","LineString","SimpleGeometry","layout","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","setCoordinates","setFlatCoordinates","appendCoordinate","lineString","maxSquaredDelta","assignClosestPoint","forEachSegment","getCoordinateAtM","getCoordinates","getCoordinateAt","getLength","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","douglasPeucker","intersectsLineString","setLayout","deflateCoordinates","MultiLineString","ends_","getLayout","lineStrings","appendLineString","multiLineString","arrayMaxSquaredDelta","assignClosestArrayPoint","getLineString","getLineStrings","midpoints","midpoint","simplifiedEnds","douglasPeuckerArray","intersectsLineStringArray","deflateCoordinatesArray","MultiPoint","appendPoint","point","multiPoint","squaredDistance","squaredDx","getPoint","Point","linearRingss","flatCenters","createOrUpdateFromFlatCoordinates","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","orientedRevision_","orientedFlatCoordinates_","thisLayout","polygons","thisEndss","polygon","appendPolygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","getArea","linearRingssArea","orientLinearRingsArray","linearRingssCenter","getInteriorPointsOfMultiArray","getInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","Polygon","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONObject","geoJSONFeatureCollection","geoJSONFeatures","crs","objects","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","rightHanded","maxEntries","rbush_","RBush_","items_","extents","values","items","uid","update","bbox","getAll","getInExtent","forEach_","forEachInExtent","rbush","ADDFEATURE","CHANGEFEATURE","CLEAR","REMOVEFEATURE","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","withCredentials","loadFeaturesXhr","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","DOMParser","parseFromString","response","onerror","send","addFeatures","VOID","VectorSourceEvent","Event","VectorSource","Source","attributions","wrapX","loader_","format_","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","collection","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","getArray","Collection","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","ObjectEventType","PROPERTYCHANGE","valid","newFeatures","geometryFeatures","modifyingCollection","evt","CollectionEventType","ADD","element","REMOVE","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","intersectsCoordinate","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","wrapAndSliceX","anExtent","getClosestFeatureToCoordinate","closestFeature","TRUE","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","alreadyLoaded","refresh","removeLoadedExtent","featureChangeKeys","removed","setLoader","setUrl","setup","OSMLayer","WebGLTile","OSM","customLayer","stylyFunction","geojsonSource","Vector","initMap","async","console","Map","layers","view","View","zoom","controls","attribution","__exports__"],"sourceRoot":""}