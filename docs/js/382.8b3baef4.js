"use strict";(self["webpackChunkgraduate"]=self["webpackChunkgraduate"]||[]).push([[382],{5382:function(e,t,r){r.r(t),r.d(t,{default:function(){return g}});var a=r(3396);const i={class:"container",ref:"container"};function o(e,t,r,o,n,s){return(0,a.wg)(),(0,a.iD)("div",i,null,512)}var n=r(4870),s=r(7709),l=r.n(s),c=r(4161),u=r(7327),m=(r(7658),r(1439),r(7585),r(5315),r(5497)),d=r(9480);class h{constructor(e,t){(0,u.Z)(this,"vertexScript",null),(0,u.Z)(this,"fragmentScript",null),(0,u.Z)(this,"position",[]),(0,u.Z)(this,"simpleArray",[]),(0,u.Z)(this,"rotationArray",[]),(0,u.Z)(this,"strip",null),(0,u.Z)(this,"palette",null),(0,u.Z)(this,"simpleTexture",null),(0,u.Z)(this,"paletteTexture",null),(0,u.Z)(this,"number",void 0),(0,u.Z)(this,"symbolPixel",void 0),(0,u.Z)(this,"modelMatrix",m.Ue()),this.number=e,this.symbolPixel=t,m.yR(this.modelMatrix),m.bA(this.modelMatrix,this.modelMatrix,[t*window.devicePixelRatio,t*window.devicePixelRatio,1])}async getShader(e,t){const r=await c.Z.get(e).then((e=>e.data));"vertex"===t?this.vertexScript=r:this.fragmentScript=r}getTexture(e,t){return new Promise(((r,a)=>{const i=new Image;i.src=e,i.onload=()=>{"palette"===t?this.palette=i:this.strip=i,r(null)}}))}async getData(e,t,r){const a=new Promise(((t,r)=>{c.Z.get(e).then((e=>t(e.data)))})),i=new Promise(((e,r)=>{c.Z.get(t).then((t=>e(t.data)))}));return r?Promise.all([i,a]).then((e=>{const t=e[0].markers.description;for(let a=0;a<t.length;a++)if(t[a].name===r){const r=Math.ceil(t[a].length/this.number);for(let i=0;i<e[1].features.length;i++){const o=e[1].features[i],n=s.MercatorCoordinate.fromLngLat({lng:o.geometry.coordinates[0],lat:o.geometry.coordinates[1]});for(let e=0;e<r;e++){this.simpleArray.push(t[a].base,t[a].length,e,t[a].ID);const r=(0,d.LS)(n.x),i=(0,d.LS)(n.y);this.position.push(r[0],i[0],r[1],i[1]),this.rotationArray.push(0)}}}})):Promise.all([i,a]).then((e=>{const t=e[0].markers.description;for(let r=0;r<e[1].features.length;r++){let a;do{a=Math.floor(6*Math.random())}while(3===a);const i=360*Math.random(),o=Math.ceil(t[a].length/this.number),n=e[1].features[r],l=s.MercatorCoordinate.fromLngLat({lng:n.geometry.coordinates[0],lat:n.geometry.coordinates[1]});for(let e=0;e<o;e++){this.simpleArray.push(t[a].base,t[a].length,e,t[a].ID);const r=(0,d.LS)(l.x),o=(0,d.LS)(l.y);this.position.push(r[0],o[0],r[1],o[1]),this.rotationArray.push(i)}}}))}myBindTexture(e){this.strip&&this.palette&&(this.simpleTexture=e.createTexture(),e.bindTexture(e.TEXTURE_2D,this.simpleTexture),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,this.strip),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),this.paletteTexture=e.createTexture(),e.bindTexture(e.TEXTURE_2D,this.paletteTexture),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,this.palette),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR))}generateCustomLayer(e,t){let r,a;const i=this.vertexScript,o=this.fragmentScript,n=this.position,s=this.simpleArray,c=this.rotationArray,u=this,m={id:e,type:"custom",onAdd(e,t){if(i&&o&&n&&s&&c){const e=t.createShader(t.VERTEX_SHADER);t.shaderSource(e,i),t.compileShader(e);const l=t.createShader(t.FRAGMENT_SHADER);t.shaderSource(l,o),t.compileShader(l),r=t.createProgram(),t.attachShader(r,e),t.attachShader(r,l),t.linkProgram(r),a=t.createVertexArray(),t.bindVertexArray(a);const m=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,m),t.bufferData(t.ARRAY_BUFFER,new Float32Array([...s,...n,...c]),t.DYNAMIC_DRAW),t.enableVertexAttribArray(0),t.vertexAttribPointer(0,4,t.FLOAT,!1,16,0),t.vertexAttribDivisor(0,1),t.enableVertexAttribArray(1),t.vertexAttribPointer(1,4,t.FLOAT,!1,16,16*c.length),t.vertexAttribDivisor(1,1),t.enableVertexAttribArray(2),t.vertexAttribPointer(2,1,t.FLOAT,!1,4,32*c.length),t.vertexAttribDivisor(2,1),t.bindBuffer(t.ARRAY_BUFFER,null),t.bindVertexArray(null),u.myBindTexture.call(u,t)}},render(e,i){e.useProgram(r);const o=e.getUniformLocation(r,"u_symbolMatrix");e.uniformMatrix4fv(o,!1,u.modelMatrix);const n=e.getUniformLocation(r,"u_bufferSize");e.uniform2f(n,e.canvas.width,e.canvas.height);const s=t.getCenter(),c=l().MercatorCoordinate.fromLngLat({lng:s.lng,lat:s.lat}),m=(0,d.LS)(c.x),h=(0,d.LS)(c.y),T=e.getUniformLocation(r,"u_mercatorCenterHigh");e.uniform2f(T,m[0],h[0]);const E=e.getUniformLocation(r,"u_mercatorCenterLow");e.uniform2f(E,m[1],h[1]);const x=e.getUniformLocation(r,"u_matrix"),g=i.slice();g[12]+=g[0]*c.x+g[4]*c.y,g[13]+=g[1]*c.x+g[5]*c.y,g[14]+=g[2]*c.x+g[6]*c.y,g[15]+=g[3]*c.x+g[7]*c.y,e.uniformMatrix4fv(x,!1,g),e.bindVertexArray(a);const y=e.getUniformLocation(r,"symbolTexture"),p=e.getUniformLocation(r,"paletteTexture");e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,u.simpleTexture),e.uniform1i(y,0),e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,u.paletteTexture),e.uniform1i(p,1),e.drawArraysInstanced(e.TRIANGLE_STRIP,0,u.number,u.rotationArray.length),e.bindVertexArray(null),e.bindTexture(e.TEXTURE_2D,null)}};return m}}var T=(0,a.aZ)({setup(){const e=(0,n.iH)();let t;const r=new h(64,40),i=async()=>{await r.getShader("/docs/symbol/shader/symbol.vert.glsl","vertex"),await r.getShader("/docs/symbol/shader/symbol.frag.glsl","fragment"),await r.getTexture("/docs/symbol/texture/strip_z.png","strip"),await r.getTexture("/docs/symbol/texture/palette_z.png","palette"),await r.getData("/docs/symbol/json/output.geojson","/docs/symbol/json/tbvs_z.json")},o=()=>{const a={container:e.value,center:[118.785067,32.059148],zoom:8.8,useWebGL2:!0,antialias:!0,accessToken:"pk.eyJ1Ijoiam9obm55dCIsImEiOiJja2xxNXplNjYwNnhzMm5uYTJtdHVlbTByIn0.f1GfZbFLWjiEayI6hb_Qvg",style:"mapbox://styles/johnnyt/cl9cj370u004714pcdxhynqc9"};t=new(l().Map)(a),t.on("load",(async()=>{t.addLayer(r.generateCustomLayer("symbol",t));const e=await c.Z.get("/docs/symbol/json/crossroad_NJ.geojson").then((e=>e.data));t.loadImage("/docs/symbol/texture/交叉路口.png",((r,a)=>{t.addImage("crossroad",a),t.addSource("pointCrossroad",{type:"geojson",data:e}),t.addLayer({id:"pointCrossroad",type:"symbol",source:"pointCrossroad",layout:{"icon-image":"crossroad","icon-size":.3,"icon-ignore-placement":!0,"icon-rotate":0}})}))}))};return(0,a.bv)((async()=>{await i(),o()})),{container:e}}}),E=r(89);const x=(0,E.Z)(T,[["render",o],["__scopeId","data-v-34464bf0"]]);var g=x}}]);
//# sourceMappingURL=382.8b3baef4.js.map