{"version":3,"file":"js/854.8eacbf59.js","mappings":"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","sources":["webpack://graduate/./node_modules/ol/Collection.js","webpack://graduate/./node_modules/ol/CollectionEventType.js","webpack://graduate/./node_modules/ol/renderer/Map.js","webpack://graduate/./node_modules/ol/renderer/Composite.js","webpack://graduate/./node_modules/ol/layer/Group.js","webpack://graduate/./node_modules/ol/MapEvent.js","webpack://graduate/./node_modules/ol/MapBrowserEvent.js","webpack://graduate/./node_modules/ol/MapBrowserEventType.js","webpack://graduate/./node_modules/ol/pointer/EventType.js","webpack://graduate/./node_modules/ol/MapBrowserEventHandler.js","webpack://graduate/./node_modules/ol/MapProperty.js","webpack://graduate/./node_modules/ol/structs/PriorityQueue.js","webpack://graduate/./node_modules/ol/TileQueue.js","webpack://graduate/./node_modules/ol/interaction/Property.js","webpack://graduate/./node_modules/ol/interaction/Interaction.js","webpack://graduate/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://graduate/./node_modules/ol/interaction/Pointer.js","webpack://graduate/./node_modules/ol/events/condition.js","webpack://graduate/./node_modules/ol/interaction/DragPan.js","webpack://graduate/./node_modules/ol/interaction/DragRotate.js","webpack://graduate/./node_modules/ol/render/Box.js","webpack://graduate/./node_modules/ol/interaction/DragBox.js","webpack://graduate/./node_modules/ol/interaction/DragZoom.js","webpack://graduate/./node_modules/ol/events/Key.js","webpack://graduate/./node_modules/ol/interaction/KeyboardPan.js","webpack://graduate/./node_modules/ol/interaction/KeyboardZoom.js","webpack://graduate/./node_modules/ol/Kinetic.js","webpack://graduate/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://graduate/./node_modules/ol/interaction/PinchRotate.js","webpack://graduate/./node_modules/ol/interaction/PinchZoom.js","webpack://graduate/./node_modules/ol/interaction/defaults.js","webpack://graduate/./node_modules/ol/Map.js","webpack://graduate/./node_modules/ol/MapEventType.js","webpack://graduate/./node_modules/ol/control/Control.js","webpack://graduate/./node_modules/ol/control/Attribution.js","webpack://graduate/./node_modules/ol/control/Rotate.js","webpack://graduate/./node_modules/ol/control/Zoom.js","webpack://graduate/./node_modules/ol/control/defaults.js","webpack://graduate/./node_modules/ol/css.js","webpack://graduate/./node_modules/ol/render/canvas.js","webpack://graduate/./node_modules/ol/TileCache.js","webpack://graduate/./node_modules/ol/source/TileEventType.js","webpack://graduate/./node_modules/ol/tilegrid/TileGrid.js","webpack://graduate/./node_modules/ol/tilegrid.js","webpack://graduate/./node_modules/ol/source/Tile.js","webpack://graduate/./node_modules/ol/tileurlfunction.js","webpack://graduate/./node_modules/ol/source/UrlTile.js","webpack://graduate/./node_modules/ol/source/TileImage.js","webpack://graduate/./node_modules/ol/source/XYZ.js","webpack://graduate/./node_modules/ol/source/OSM.js","webpack://graduate/./node_modules/ol/source/Source.js","webpack://graduate/./node_modules/ol/style/IconImageCache.js"],"sourcesContent":["/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`'\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue'\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`'\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`'\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`'\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      '`resolutions` must be sorted in descending order'\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal'\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal'\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.'\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(\n            range,\n            'The {-y} placeholder requires a tile grid with extent'\n          );\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n"],"names":["Property","LENGTH","CollectionEvent","Event","constructor","type","element","index","super","this","Collection","BaseObject","array","options","on","once","un","unique_","unique","array_","i","ii","length","assertUnique_","updateLength_","clear","getLength","pop","extend","arr","push","forEach","f","getArray","item","get","insertAt","elem","Error","splice","dispatchEvent","CollectionEventType","ADD","removeAt","n","remove","prev","REMOVE","setAt","set","except","MapRenderer","Disposable","map","map_","dispatchRenderEvent","frameState","abstract","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","composeTransform","size","resolution","rotation","center","makeInverse","forEachFeatureAtCoordinate","coordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","result","managed","feature","layer","geometry","call","projection","translatedCoordinate","wrapX","slice","offsets","canWrapX","projectionExtent","getExtent","worldWidth","getWidth","layerStates","layerStatesArray","numLayers","matches","tmpCoord","j","layerState","hasRenderer","inView","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","bind","order","m","distanceSq","sort","a","b","some","hasFeatureAtCoordinate","hasFeature","TRUE","undefined","getMap","renderFrame","flushDeclutterItems","scheduleExpireIconCache","iconImageCache","canExpireCache","postRenderFunctions","expireIconCache","expire","CompositeMapRenderer","fontChangeListenerKey_","listen","checkedFonts","ObjectEventType","PROPERTYCHANGE","redrawText","element_","document","createElement","style","position","width","height","zIndex","className","CLASS_UNSELECTABLE","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","declutterLayers_","hasListener","event","RenderEvent","disposeInternal","unlistenByKey","parentNode","removeChild","display","RenderEventType","PRECOMPOSE","declutterLayers","previousElement","layerIndex","sourceState","getSourceState","unrender","render","replaceChildren","POSTCOMPOSE","layers","renderDeclutter","GroupEvent","LAYERS","LayerGroup","BaseLayer","baseOptions","Object","assign","layersListenerKeys_","listenerKeys_","addChangeListener","handleLayersChanged_","Array","isArray","assert","setLayers","handleLayerChange_","changed","getLayers","handleLayersAdd_","handleLayersRemove_","id","layersArray","registerLayerListeners_","listenerKeys","EventType","CHANGE","handleLayerGroupAdd_","handleLayerGroupRemove_","getUid","collectionEvent","key","collection","currentLayers","getLayersArray","getLayerStatesArray","dest","states","pos","ownLayerState","getLayerState","defaultZIndex","opacity","visible","maxResolution","Math","min","minResolution","max","minZoom","maxZoom","extent","getIntersection","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","getCoordinateFromPixel","preventDefault","stopPropagation","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","addEventListener","TOUCHMOVE","PASSIVE_EVENT_LISTENERS","passive","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","clearTimeout","setTimeout","updateActivePointers_","pointerId","target","values","handlePointerUp_","defaultPrevented","isMouseActionButton_","button","PointerEvent","defineProperty","writable","value","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","removeEventListener","LAYERGROUP","SIZE","TARGET","VIEW","DROP","Infinity","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","apply","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","getTilesLoading","state","getState","TileState","LOADED","ERROR","EMPTY","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","IDLE","load","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","log","sqrt","ACTIVE","Interaction","handleEvent","setActive","getActive","InteractionProperty","mapBrowserEvent","active","setMap","pan","view","delta","duration","currentCenter","getCenterInternal","animateInternal","easing","linear","getConstrainedCenter","zoomByDelta","anchor","currentZoom","getZoom","newZoom","getConstrainedZoom","newResolution","getResolutionForZoom","getAnimating","cancelAnimations","animate","easeOut","DoubleClickZoom","delta_","duration_","stopEvent","browserEvent","shiftKey","getView","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","centroid","pointerEvents","all","var_args","conditions","arguments","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focus","targetElement","getTargetElement","activeElement","contains","focusWithTabindex","hasAttribute","always","mouseActionButton","WEBKIT","MAC","noModifierKeys","platformModifierKey","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","FALSE","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroidFromPointers","update","scaleCoordinate","getResolution","rotateCoordinate","getRotation","adjustCenterInternal","begin","end","distance","getDistance","angle","getAngle","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","cos","sin","endInteraction","DragRotate","lastAngle_","getConstraints","disable","getSize","offset","theta","atan2","adjustRotationInternal","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","appendChild","setPixels","createOrUpdateGeometry","pixels","setCoordinates","Polygon","getGeometry","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","rotatedExtent","rotatedExtentForGeometry","getResolutionForExtentInternal","factor","clone","scale","fitInternal","LEFT","UP","RIGHT","DOWN","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","KEYDOWN","keyEvent","Key","mapUnitsDelta","KeyboardZoom","KEYPRESS","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","x","y","Date","now","lastIndex","firstIndex","dx","dy","MouseWheelZoom","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","WHEEL","wheelEvent","FIREFOX","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DEVICE_PIXEL_RATIO","DOM_DELTA_LINE","getConstrainResolution","adjustZoom","timeLeft","handleWheelZoom_","clamp","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","adjustResolutionInternal","direction","defaults","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","removeLayerMapProperty","Layer","setMapInternal","setLayerMapProperty","Map","optionsInternal","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","createTransform","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","controls","defaultControls","defaultInteractions","overlays_","overlays","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","setProperties","View","then","viewOptions","setView","addOverlayInternal_","getId","toString","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","setTarget","forEachFeatureAtPixel","getFeaturesAtPixel","features","getAllLayers","addLayersFrom","layerGroup","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewport","viewportPosition","getBoundingClientRect","viewportSize","scaleX","scaleY","eventPosition","changedTouches","getTarget","toUserCoordinate","getProjection","applyTransform","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","fromUserCoordinate","getOverlayContainerStopEvent","ownerDocument","handleMapBrowserEvent","eventType","rootNode","documentElement","interactionsArray","cont","propagationStopped","handlePostRender","tileQueue","hints","viewHints","ViewHint","ANIMATING","INTERACTING","lowOnFrameBudget","time","RENDERCOMPLETE","MapEventType","LOADEND","LOADSTART","resolveConstraints","CONTEXTMENU","dispose","removeNode","unobserve","ShadowRoot","host","setSize","getElementById","observe","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","hasArea","isDef","getHints","declutterTree","getForViewAndSize","usedTiles","mapId","renderTargets","nextCenter","nextResolution","isNaN","nextRotation","nextExtent","prototype","moveStart","equalsExtent","MOVESTART","createOrUpdateEmpty","idle","MOVEEND","POSTRENDER","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","warn","oldSize","equals","parseInt","setViewportSize","Control","target_","VOID","mapEvent","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","String","title","handleClick_","cssClasses","CLASS_CONTROL","CLASS_COLLAPSED","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","flatMap","getAttributions","getAttributionsCollapsible","setCollapsible","updateElement_","attributions","removeChildren","innerHTML","handleToggle_","classList","toggle","replaceNode","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","add","callResetNorth_","resetNorth","autoHide_","autoHide","rotation_","CLASS_HIDDEN","resetNorth_","PI","setRotation","transform","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","zoom","setZoom","zoomControl","zoomOptions","rotateControl","rotate","rotateOptions","attributionControl","attribution","attributionOptions","fontRegEx","RegExp","join","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","split","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","measureFont","measureContext","textHeights","registerFont","retries","referenceFonts","len","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","getKeys","font","clearInterval","setInterval","measureTextHeight","measureElement","WORKER_OFFSCREEN_CANVAS","metrics","measureText","Number","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","padding","border","body","createCanvasContext2D","measureAndCacheTextWidth","cache","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","context","labelOrImage","originX","originY","w","h","save","globalAlpha","contextInstructions","translate","executeLabelInstructions","drawImage","restore","TileCache","LRUCache","release","expireCache","peekLast","pruneExceptNewestZ","peekFirstKey","tileCoord","fromKey","z","TILELOADSTART","TILELOADEND","TILELOADERROR","tmpTileCoord","DECIMALS","TileGrid","zoomFactor","resolutions_","resolutions","isSorted","origins","zoomFactor_","origin_","origin","origins_","getTopLeft","tileSizes_","tileSizes","tileSize_","tileSize","DEFAULT_TILE_SIZE","extent_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","tileRange","TileRange","restrictedTileRange","getTileRangeForExtentAndZ","minX","maxX","minY","maxY","calculateTileRanges_","forEachTileCoord","jj","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","getTileCoordExtent","floor","createOrUpdateTileRange","getMaxZoom","getMinZoom","getOrigin","getResolutions","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","pow","getTileCoordForXYAndZ_","getTileCoordCenter","toSize","getTileSize","createOrUpdate","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getZForResolution","ceil","createOrUpdateTileCoord","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","opt_direction","linearFindNearest","tileCoordIntersectsViewport","intersectsLinearRing","fullTileRanges","getForProjection","tileGrid","getDefaultTileGrid","createForProjection","setDefaultTileGrid","extentFromProjection","containsCoordinate","worldsAway","createForExtent","corner","resolutionsFromExtent","getCorner","createXYZ","xyzOptions","gridOptions","DEFAULT_MAX_ZOOM","getHeight","half","METERS_PER_UNIT","degrees","getMetersPerUnit","TileSource","Source","attributionsCollapsible","interpolate","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","cacheSize","tmpSize","key_","tileOptions","transition","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getKeyZXY","containsKey","getGutterForProjection","setKey","getOpaque","getTileGridForProjection","getTile","getTileGrid","sourceProjection","equivalent","getTilePixelRatio","getTilePixelSize","scaleSize","getTileCoordForTileUrlFunction","isGlobal","withinExtentAndZ","refresh","updateCacheSize","tileCount","highWaterMark","useTile","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","replace","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","tileCoordHash","modulo","expandUrl","url","urls","exec","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop","UrlTile","generateTileUrlFunction_","tileUrlFunction","tileLoadFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","LOADING","TileEventType","setTileLoadFunction","setTileUrlFunction","TileImage","defaultTileLoadFunction","crossOrigin","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","getInterpolate","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","sourceTileGrid","targetTileGrid","wrappedTileCoord","newTile","ReprojTile","interimTile","refreshInterimChain","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","src","getImage","XYZ","gutter_","gutter","ATTRIBUTION","OSM","attributions_","adaptAttributions","attributionsCollapsible_","state_","wrapX_","interpolate_","viewResolver","viewRejector","self","viewPromise_","Promise","resolve","reject","setAttributions","setState","attributionLike","IconImageCache","cache_","cacheSize_","maxCacheSize_","iconImage","color","maxCacheSize","colorString","asString","shared"],"sourceRoot":""}